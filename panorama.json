{
    "appid": "3d88e427-0e61-4311-a613-bbddeac532e0",
    "name": "Panorama",
    "description": "This app integrates with the Palo Alto Networks Panorama product to support several containment and investigative actions",
    "publisher": "Splunk",
    "type": "firewall",
    "main_module": "panorama_connector.py",
    "app_version": "5.0.0",
    "utctime_updated": "2022-01-27T22:10:12.000000Z",
    "package_name": "phantom_panorama",
    "product_vendor": "Palo Alto Networks",
    "product_name": "Panorama",
    "product_version_regex": ".*",
    "min_phantom_version": "6.1.0",
    "python_version": "3",
    "fips_compliant": false,
    "logo": "logo_panorama.svg",
    "logo_dark": "logo_panorama_dark.svg",
    "license": "Copyright (c) 2016-2023 Splunk Inc.",
    "configuration": {
        "device": {
            "description": "Device IP/Hostname",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "verify_server_cert": {
            "description": "Verify server certificate",
            "data_type": "boolean",
            "order": 1,
            "default": false
        },
        "username": {
            "description": "Username",
            "data_type": "string",
            "required": true,
            "order": 2
        },
        "password": {
            "description": "Password",
            "data_type": "password",
            "required": true,
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity",
            "verbose": "This action logs into the device using a REST Api call to check the connection and credentials configured.",
            "type": "test",
            "identifier": "test_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "block url",
            "description": "Block an URL",
            "verbose": "This action does the following to block a URL:<ul><li>Create an URL Filtering profile object named '<b>Phantom URL List for [device_group]</b>' containing the URL to block.</br>If the profile is already present, then it will be updated to include the URL to block. IMPORTANT: For Version 9 and above, a URL Filtering profile no longer includes allow-list/block-list. The official workaround is to use a Custom URL category instead. Therefore, we create a new Custom URL category with the same name as the profile and link it to the profile. Then, We configure the profile to block the URL category on both 'SITE ACCESS' and 'USER CREDENTIAL SUBMISSION' columns.</li><li>If a <b>policy_name</b> is provided, re-configure the policy (specified in the <b>policy_name</b> parameter) to use the created URL Filtering profile. The URL filtering profile created in the previous step will be linked to the Profile Settings of the specified policy.</br>If the policy is not found on the device, the action will return an error.</li><li>If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul>",
            "type": "contain",
            "identifier": "block_url",
            "read_only": false,
            "parameters": {
                "url": {
                    "description": "URL to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "url"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 2,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 3
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 4
                },
                "audit_comment": {
                    "description": "Audit comment to be used with the policy name. Maximum 256 characters",
                    "data_type": "string",
                    "order": 5
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.url",
                    "data_type": "string",
                    "column_name": "URL",
                    "column_order": 0,
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Block Url",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock url",
            "description": "Unblock an URL",
            "verbose": "For Version 8 and below, this action will remove the URL from the URL Filtering profile that was created/updated in the <b>block url</b> action. For Version 9 and above, this action will remove the URL from the Custom URL category that was created/updated in the <b>block url</b> action. If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.",
            "type": "correct",
            "identifier": "unblock_url",
            "read_only": false,
            "parameters": {
                "url": {
                    "description": "URL to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "url"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 2
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.url",
                    "data_type": "string",
                    "column_name": "URL",
                    "column_order": 0,
                    "contains": [
                        "url"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Unblock Url",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "block application",
            "description": "Block an application",
            "verbose": "This action does the following to block an application:<ul><li>Create an Application group named '<b>Phantom App List for [device_group]</b>' containing the application to block.</br>If the group is already present, then it will be updated to include the application.</li><li>If a <b>policy_name</b> is provided, re-configure the policy (specified in the <b>policy_name</b> parameter) to use the created application group.</br>If the policy is not found on the device, the action will return an error.</li><li>If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul>To get a list of applications that can be blocked, execute the <b>list applications</b> action.",
            "type": "contain",
            "identifier": "block_application",
            "read_only": false,
            "parameters": {
                "application": {
                    "description": "Application to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "network application"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 2,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 3
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 4
                },
                "audit_comment": {
                    "description": "Audit comment to be used with the policy name. Maximum 256 characters",
                    "data_type": "string",
                    "order": 5
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Block Application"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock application",
            "description": "Unblock an application",
            "verbose": "This action will remove the application from the Application group that was created/updated in the <b>block application</b> action. If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.<br>Note: This action will pass for any non-existing application name as API doesn't return an error for an incorrect application name.",
            "type": "correct",
            "identifier": "unblock_application",
            "read_only": false,
            "parameters": {
                "application": {
                    "description": "Application to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "network application"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 2
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Unblock Application"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "block ip",
            "description": "Block an IP",
            "verbose": "<p>This action uses a multistep approach to block an IP. The approach differs whether <b>is_source_address</b> is true or not.  By default, it is false.  The procedure is as follows:</p><ul><li>Create an address entry named '<b>[ip_address] Added By Phantom</b>' with the specified IP address<li>If the option <b>should_add_tag</b> is enabled, the container id of the phantom action is added as a tag to the address entry when it's created<li>If <b>is_source_address</b> is false:<ul><li> add this entry to an address group called <b>Phantom Network List for [device_group]</b></li><li>The address entry and group will be created in the device group specified in the <b>device_group</b> parameter</li><li>If a <b>policy_name</b> is provided, configure the address group as a <i>destination</i> to the policy specified in the <b>policy_name</b> parameter</li></ul>If <b>is_source_address</b> is true:<ul><li>add this entry to an address group called <b>PhantomNtwrkSrcLst[device_group]</b></li><li>The address entry and group will be created in the device group specified in the <b>device_group</b> parameter</li><li>If a <b>policy_name</b> is provided, configure the address group as a <i>source</i> to the policy specified in the <b>policy_name</b> parameter</ul><b>Note:</b> If the policy is not found on the device, the action will return an error.<li>If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul><p><b>Please Note:</b> If the Panorama Policy that is used to block a source or destination address has 'Any' in the Source Address or Destination Address field, Block IP will succeed but it will not work.  Therefore, make sure that the policy that the address group will be appended to has no 'Any' in the field that you are blocking from.  i.e, if you are blocking an IP from source, make sure the policy does not have 'Any' under Source Address.</p><p>The address group name is limited to 32 characters.  The device group chosen will be appended to the address group name created.  If the resulting name is too long, the name will be trimmed, which may result in clipped or unusual names.  This is as intended, as it is a limitation by Panorama.</p>",
            "type": "contain",
            "identifier": "block_ip",
            "read_only": false,
            "parameters": {
                "ip": {
                    "description": "IP to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "ip"
                    ],
                    "primary": true,
                    "required": true
                },
                "is_source_address": {
                    "description": "Source address",
                    "data_type": "boolean",
                    "order": 1
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 2,
                    "required": true
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 3,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 4
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 5
                },
                "audit_comment": {
                    "description": "Audit comment to be used with the policy name. Maximum 256 characters",
                    "data_type": "string",
                    "order": 6
                },
                "should_add_tag": {
                    "description": "Whether a new tag should added as part of adding a new IP address",
                    "data_type": "boolean",
                    "default": true,
                    "order": 7
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 8
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "column_name": "IP",
                    "column_order": 0,
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.parameter.is_source_address",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_add_tag",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Block Ip",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock ip",
            "description": "Unblock an IP",
            "verbose": "This action will remove the address entry from the Address group that was created/updated in the <b>block ip</b> action.  This action behaves differently based upon whether <b>is_source_address</b> is true or false.  By default, it is false.<br>If <b>is_source_address</b> is false:<ul><li>The given IP address will be removed from the <b>Phantom Network List for [device_group]</b> Address Group.</li></ul>If <b>is_source_address</b> is true:<ul><li>The given IP address will be removed from the <b>PhantomNtwrkSrcLst[device_group]</b> Address Group.</li></ul>If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.",
            "type": "correct",
            "identifier": "unblock_ip",
            "read_only": false,
            "parameters": {
                "ip": {
                    "description": "IP to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "ip"
                    ],
                    "primary": true,
                    "required": true
                },
                "is_source_address": {
                    "description": "Source address",
                    "data_type": "boolean",
                    "order": 1
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 2,
                    "required": true
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 3
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "column_name": "IP",
                    "column_order": 0,
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.is_source_address",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Unblock Ip",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list applications",
            "description": "List the applications that the device knows about and can block",
            "type": "investigate",
            "identifier": "list_apps",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ]
                },
                {
                    "data_path": "action_result.data.*.category",
                    "data_type": "string",
                    "column_name": "Category",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.has-known-vulnerability",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.used-by-malware",
                    "data_type": "string",
                    "column_name": "Used By Malware",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.@ori_country",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.consume-big-bandwidth",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.able-to-transfer-file",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.technology",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.pervasive-use",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@ori_lauguage",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.subcategory",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.prone-to-misuse",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.evasive-behavior",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.link",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.@name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk",
                    "data_type": "string",
                    "column_name": "Risk",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.application-container",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.*.link",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.*.@name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-type-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.virus-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.implicit-use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.udp-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.ident-by-ip-protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-forward",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ottawa-name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.implicit-use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.breaks-decryption",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.related-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.child",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.analysis",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.not-support-ssl",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.enable-url-filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.threshold",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.interval",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.track-by.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rule-match",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.interval",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.key-by.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tcp-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ident-by-dport",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-forward",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ident-by-sport",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.preemptive",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.*.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.netx-vmotion",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ha-safe",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.doc-review",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.*.ident-by-ip-protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.*.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.udp-discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.ident-by-icmp-type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.deprecated",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.alg-disable-capability",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tcp-discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total applications: 2421"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_applications",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Application List"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "description": "Run a query on Panorama",
            "verbose": "This action runs a query on Panorama and returns the set of logs matching the search criteria.<br><br>Use the <b>range</b> parameter to limit the number of logs returned by the action. If no range is given, the action will use the range <b>1-5000</b>. The action can retrieve up to a maximum of 5000 logs. If more logs need to be retrieved, rerun the action with the next sequential range of values.<br><br>The <b>log_type</b> parameter can be one of the following:<ul><li><b>traffic</b> - traffic logs</li><li><b>url</b> - URL filtering logs</li><li><b>data</b> - data filtering logs</li><li><b>threat</b> - threat logs</li><li><b>config</b> - config logs</li><li><b>system</b> - system logs</li><li><b>hipmatch</b> - HIP match logs</li><li><b>wildfire</b> - wildfire logs</li><li><b>corr</b> - correlated event logs</li><li><b>corr-categ</b> - correlated events by category</li><li><b>corr-detail</b> - correlated event details.</li></ul>",
            "type": "investigate",
            "identifier": "run_query",
            "read_only": true,
            "parameters": {
                "log_type": {
                    "description": "Log type to query",
                    "data_type": "string",
                    "order": 0,
                    "default": "traffic",
                    "value_list": [
                        "traffic",
                        "url",
                        "corr",
                        "data",
                        "threat",
                        "config",
                        "system",
                        "hipmatch",
                        "wildfire",
                        "corr-categ",
                        "corr-detail"
                    ],
                    "required": true
                },
                "query": {
                    "description": "Query to run",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "range": {
                    "description": "Range of result logs to retrieve (e.g 1-5000 or 100-700)",
                    "data_type": "string",
                    "order": 2
                },
                "direction": {
                    "description": "Direction to search",
                    "data_type": "string",
                    "default": "backward",
                    "value_list": [
                        "backward",
                        "forward"
                    ],
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string",
                    "example_values": [
                        "( port.dst eq 161 )"
                    ]
                },
                {
                    "data_path": "action_result.parameter.log_type",
                    "data_type": "string",
                    "example_values": [
                        "traffic"
                    ]
                },
                {
                    "data_path": "action_result.parameter.direction",
                    "data_type": "string",
                    "example_values": [
                        "backward"
                    ]
                },
                {
                    "data_path": "action_result.parameter.range",
                    "data_type": "string",
                    "example_values": [
                        "1-5000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.id",
                    "data_type": "string",
                    "example_values": [
                        "1316"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "15:46:37"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "15:46:37"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tlast",
                    "data_type": "string",
                    "example_values": [
                        "16:00:00"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.cached-logs",
                    "data_type": "string",
                    "example_values": [
                        "21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.to",
                    "data_type": "string",
                    "example_values": [
                        "Internal Zone"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.app",
                    "data_type": "string",
                    "example_values": [
                        "snmp-base"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dst",
                    "data_type": "string",
                    "column_name": "Destination IP",
                    "column_order": 4,
                    "example_values": [
                        "10.18.3.2"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.src",
                    "data_type": "string",
                    "column_name": "Source IP",
                    "column_order": 2,
                    "example_values": [
                        "10.10.0.18"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.from",
                    "data_type": "string",
                    "example_values": [
                        "Internal Zone"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.rule",
                    "data_type": "string",
                    "example_values": [
                        "Phantom URL Security Policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.type",
                    "data_type": "string",
                    "example_values": [
                        "TRAFFIC"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.vsys",
                    "data_type": "string",
                    "example_values": [
                        "vsys1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes",
                    "data_type": "string",
                    "example_values": [
                        "79"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dport",
                    "data_type": "string",
                    "column_name": "Destination Port",
                    "column_order": 5,
                    "example_values": [
                        "161"
                    ],
                    "contains": [
                        "port"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flags",
                    "data_type": "string",
                    "example_values": [
                        "0x64"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.proto",
                    "data_type": "string",
                    "example_values": [
                        "udp"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.seqno",
                    "data_type": "string",
                    "example_values": [
                        "1715"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sport",
                    "data_type": "string",
                    "column_name": "Source Port",
                    "column_order": 3,
                    "example_values": [
                        "64453"
                    ],
                    "contains": [
                        "port"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.start",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.@logid",
                    "data_type": "string",
                    "example_values": [
                        "7592"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.domain",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ],
                    "contains": [
                        "domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dstloc",
                    "data_type": "string",
                    "example_values": [
                        "10.0.0.0-10.255.255.255"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.logset",
                    "data_type": "string",
                    "example_values": [
                        "Forward all logs from DG2"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.serial",
                    "data_type": "string",
                    "example_values": [
                        "007200000031753"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.srcloc",
                    "data_type": "string",
                    "example_values": [
                        "10.0.0.0-10.255.255.255"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.elapsed",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.packets",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.padding",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pbf-c2s",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pbf-s2c",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.subtype",
                    "data_type": "string",
                    "example_values": [
                        "end"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.vsys_id",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.category",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.cpadding",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-nat",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.natdport",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.natsport",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-pcap",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pkts_sent",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.repeatcnt",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sessionid",
                    "data_type": "string",
                    "column_name": "Session ID",
                    "column_order": 1,
                    "example_values": [
                        "58"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes_sent",
                    "data_type": "string",
                    "example_values": [
                        "79"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.config_ver",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-proxy",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.inbound_if",
                    "data_type": "string",
                    "example_values": [
                        "ethernet1/1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sym-return",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.actionflags",
                    "data_type": "string",
                    "example_values": [
                        "0x8000000000000000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.device_name",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.outbound_if",
                    "data_type": "string",
                    "example_values": [
                        "ethernet1/1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.transaction",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-flagged",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.receive_time",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:54"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.action_source",
                    "data_type": "string",
                    "example_values": [
                        "from-policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.non-std-dport",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pkts_received",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.time_received",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes_received",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.captive-portal",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.decrypt-mirror",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.time_generated",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_1",
                    "data_type": "string",
                    "example_values": [
                        "17"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_2",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_3",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_4",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-url-denied",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.temporary-match",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.session_end_reason",
                    "data_type": "string",
                    "example_values": [
                        "aged-out"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.@count",
                    "data_type": "string",
                    "example_values": [
                        "21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.@progress",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Num logs: 1"
                    ]
                },
                {
                    "data_path": "action_result.summary.num_logs",
                    "data_type": "numeric",
                    "example_values": [
                        21
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Query"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "commit changes",
            "description": "Commit changes to the firewall and device groups",
            "verbose": "The action then proceeds to commit the changes to Panorama, followed by a commit to the device group. If the device group happens to be shared, then a commit will be sent to all the device groups belonging to it.",
            "type": "generic",
            "identifier": "commit_changes",
            "read_only": false,
            "parameters": {
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Commit"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get threat pcap",
            "identifier": "get_threat_pcap",
            "description": "Export a Threat PCAP file",
            "type": "generic",
            "read_only": true,
            "parameters": {
                "pcap_id": {
                    "description": "PCAP ID required to fetch Threat PCAP",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "name": "pcap_id",
                    "contains": [
                        "panorama pcap id"
                    ]
                },
                "device_name": {
                    "description": "Device Name required to fetch Threat PCAP",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 1,
                    "name": "device_name",
                    "contains": [
                        "panorama device name"
                    ]
                },
                "session_id": {
                    "description": "Session ID required to fetch Threat PCAP",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 2,
                    "name": "session_id",
                    "contains": [
                        "panorama session id"
                    ]
                },
                "search_time": {
                    "description": "Search time that the Threat PCAP was received on the firewall (yyyy/mm/dd hr:min:sec)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 3,
                    "name": "search_time",
                    "contains": [
                        "timestamp"
                    ]
                },
                "filename": {
                    "description": "Filename of exported PCAP file",
                    "data_type": "string",
                    "order": 4,
                    "name": "filename"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.pcap_id",
                    "data_type": "string",
                    "contains": [
                        "panorama pcap id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_name",
                    "data_type": "string",
                    "contains": [
                        "panorama device name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.session_id",
                    "data_type": "string",
                    "contains": [
                        "panorama session id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.search_time",
                    "data_type": "string",
                    "contains": [
                        "timestamp"
                    ]
                },
                {
                    "data_path": "action_result.parameter.filename",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list edl",
            "identifier": "list_edl",
            "description": "List External Dynamic List's",
            "read_only": true,
            "type": "investigate",
            "parameters": {
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "column_name": "EDL",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "List EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "reference edl",
            "identifier": "reference_edl",
            "description": "Create an External Dynamic List",
            "read_only": true,
            "type": "investigate",
            "parameters": {
                "name": {
                    "description": "Name of external dynamic list",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "json",
                "title": "Reference EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create edl",
            "identifier": "create_edl",
            "description": "Create an External Dynamic List",
            "read_only": true,
            "type": "generic",
            "parameters": {
                "name": {
                    "description": "Name of external dynamic list",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "description": {
                    "description": "Description of external dynamic list",
                    "data_type": "string",
                    "order": 2
                },
                "list_type": {
                    "description": "Type of external dynamic list",
                    "data_type": "string",
                    "value_list": [
                        "Predefined IP List",
                        "Predefined URL List",
                        "IP List",
                        "Domain List",
                        "URL List",
                        "Subscriber Identity List",
                        "Equipment Identity List"
                    ],
                    "default": "IP List",
                    "required": true,
                    "order": 3
                },
                "source": {
                    "description": "Source",
                    "data_type": "string",
                    "order": 4,
                    "required": true
                },
                "expand_for_subdomains": {
                    "description": "Automatically expand to include subdomains",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "default": "No",
                    "order": 5
                },
                "disable_override": {
                    "description": "external dynamic list to be shared or not",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "default": "No",
                    "order": 7
                },
                "certificate_profile": {
                    "description": "certificate profile for the edl",
                    "data_type": "string",
                    "order": 8
                },
                "check_for_updates": {
                    "description": "After what interval to check for updates",
                    "data_type": "string",
                    "value_list": [
                        "Five-minute",
                        "Hourly",
                        "Daily",
                        "Weekly",
                        "Monthly"
                    ],
                    "default": "Five-minute",
                    "order": 9
                },
                "at_hour": {
                    "description": "external dynamic list to be shared or not",
                    "data_type": "string",
                    "default": "0",
                    "order": 10
                },
                "day": {
                    "description": "external dynamic list to be shared or not",
                    "data_type": "string",
                    "value_list": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ],
                    "default": "Sunday",
                    "order": 11
                },
                "day_of_month": {
                    "description": "external dynamic list to be shared or not",
                    "data_type": "string",
                    "order": 12
                },
                "exception_list": {
                    "description": "list of exceptions (comma separated values)",
                    "data_type": "string",
                    "order": 13
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 14
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 15
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.list_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.expand_for_subdomains",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.disable_override",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.certificate_profile",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.check_for_updates",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.at_hour",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.day",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.day_of_month",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.exception_list",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "List EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "modify edl",
            "identifier": "modify_edl",
            "description": "Modify an External Dynamic List",
            "read_only": true,
            "type": "generic",
            "parameters": {
                "name": {
                    "description": "Name of external dynamic list",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "description": {
                    "description": "Description of external dynamic list",
                    "data_type": "string",
                    "order": 2
                },
                "list_type": {
                    "description": "Type of external dynamic list",
                    "data_type": "string",
                    "value_list": [
                        "Predefined IP List",
                        "Predefined URL List",
                        "IP List",
                        "Domain List",
                        "URL List",
                        "Subscriber Identity List",
                        "Equipment Identity List"
                    ],
                    "order": 3
                },
                "source": {
                    "description": "Source",
                    "data_type": "string",
                    "order": 4
                },
                "expand_for_subdomains": {
                    "description": "Automatically expand to include subdomains",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 5
                },
                "disable_override": {
                    "description": "external dynamic list to be shared or not",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 7
                },
                "certificate_profile": {
                    "description": "certificate profile for the edl",
                    "data_type": "string",
                    "order": 8
                },
                "check_for_updates": {
                    "description": "After what interval to check for updates",
                    "data_type": "string",
                    "value_list": [
                        "Five-minute",
                        "Hourly",
                        "Daily",
                        "Weekly",
                        "Monthly"
                    ],
                    "order": 9
                },
                "at_hour": {
                    "description": "external dynamic list to be shared or not",
                    "data_type": "string",
                    "order": 10
                },
                "day": {
                    "description": "external dynamic list to be shared or not",
                    "data_type": "string",
                    "value_list": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ],
                    "order": 11
                },
                "day_of_month": {
                    "description": "external dynamic list to be shared or not",
                    "data_type": "string",
                    "order": 12
                },
                "exception_list": {
                    "description": "list of exceptions (comma separated values)",
                    "data_type": "string",
                    "order": 13
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 14
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 15
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.list_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.expand_for_subdomains",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.disable_override",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.certificate_profile",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.check_for_updates",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.at_hour",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.day",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.day_of_month",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.exception_list",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "List EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete edl",
            "identifier": "delete_edl",
            "description": "Delete an External Dynamic List",
            "read_only": true,
            "type": "generic",
            "parameters": {
                "name": {
                    "description": "Name of external dynamic list",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 2
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "column_name": "EDL Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "List EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create policy",
            "identifier": "create_policy",
            "description": "Create a security policy rule",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the policy rule",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "name": "Policy Name"
                },
                "rule_type": {
                    "description": "Rule type of the policy rule.",
                    "data_type": "string",
                    "value_list": [
                        "universal",
                        "intrazone",
                        "interzone"
                    ],
                    "default": "universal",
                    "required": true,
                    "primary": true,
                    "order": 1,
                    "name": "Rule Type"
                },
                "device_group": {
                    "description": "Device group for which to create the policy rule.",
                    "data_type": "string",
                    "required": true,
                    "default": "shared",
                    "order": 2,
                    "name": "Device Group"
                },
                "policy_type": {
                    "description": "Rule base to create the policy in.",
                    "data_type": "string",
                    "required": true,
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 3,
                    "name": "Policy Type"
                },
                "source_zone": {
                    "description": "source zone of policy.",
                    "data_type": "string",
                    "required": true,
                    "default": "any",
                    "order": 4,
                    "name": "Source Zone"
                },
                "destination_zone": {
                    "description": "destination zone of policy.",
                    "data_type": "string",
                    "required": true,
                    "default": "any",
                    "order": 5,
                    "name": "Destination Zone"
                },
                "description": {
                    "description": "policy description",
                    "data_type": "string",
                    "order": 6,
                    "name": "Description"
                },
                "source_address": {
                    "description": "source address of policy.",
                    "data_type": "string",
                    "required": true,
                    "order": 7,
                    "default": "any",
                    "name": "Source Address"
                },
                "destination_address": {
                    "description": "destination address of policy.",
                    "data_type": "string",
                    "required": true,
                    "order": 8,
                    "default": "any",
                    "name": "Destination Address"
                },
                "source_user": {
                    "description": "source user for policy.",
                    "data_type": "string",
                    "order": 9,
                    "name": "Source User"
                },
                "source_device": {
                    "description": "source device for policy.",
                    "data_type": "string",
                    "order": 10,
                    "default": "any",
                    "name,": "Source Device"
                },
                "destination_device": {
                    "description": "destination device for policy.",
                    "data_type": "string",
                    "order": 11,
                    "default": "any",
                    "name,": "Destination Device"
                },
                "action": {
                    "description": "action for the policy.",
                    "data_type": "string",
                    "required": true,
                    "default": "allow",
                    "value_list": [
                        "allow",
                        "deny",
                        "drop",
                        "reset client",
                        "reset server",
                        "reset both client and server"
                    ],
                    "order": 12,
                    "name": "Action Type"
                },
                "negate_source": {
                    "description": "",
                    "data_type": "string",
                    "default": "none",
                    "value_list": [
                        "none",
                        "true",
                        "false"
                    ],
                    "order": 27,
                    "name": "Negate Source"
                },
                "negate_destination": {
                    "description": "",
                    "data_type": "string",
                    "default": "none",
                    "value_list": [
                        "none",
                        "true",
                        "false"
                    ],
                    "order": 13,
                    "name": "Negate Destination"
                },
                "application": {
                    "description": "",
                    "data_type": "string",
                    "required": true,
                    "default": "any",
                    "order": 26,
                    "name": "Application"
                },
                "where": {
                    "description": "",
                    "data_type": "string",
                    "value_list": [
                        "before",
                        "after",
                        "top",
                        "bottom"
                    ],
                    "order": 14,
                    "name": "where"
                },
                "dst": {
                    "description": "",
                    "data_type": "string",
                    "order": 15,
                    "name": "dst"
                },
                "tag": {
                    "description": "",
                    "data_type": "string",
                    "order": 16,
                    "name": "Tags",
                    "allow_list": true
                },
                "category": {
                    "description": "",
                    "data_type": "string",
                    "order": 17,
                    "name": "category",
                    "allow_list": true
                },
                "log_forwarding": {
                    "description": "",
                    "data_type": "string",
                    "order": 18,
                    "name": "Log Forwarding",
                    "allow_list": true
                },
                "disable": {
                    "description": "",
                    "data_type": "boolean",
                    "default": false,
                    "order": 19,
                    "name": "Disable"
                },
                "icmp_unreachable": {
                    "description": "",
                    "data_type": "boolean",
                    "default": false,
                    "order": 20,
                    "name": "ICMP Unreachable"
                },
                "service": {
                    "description": "",
                    "data_type": "string",
                    "required": true,
                    "default": "any",
                    "order": 21,
                    "name": "Service"
                },
                "profile_setting": {
                    "description": "",
                    "data_type": "string",
                    "value_list": [
                        "profiles",
                        "group"
                    ],
                    "order": 22,
                    "name": "Profile Setting"
                },
                "target": {
                    "description": "",
                    "data_type": "string",
                    "order": 23,
                    "name,": "Target"
                },
                "audit_comment": {
                    "description": "",
                    "data_type": "string",
                    "order": 23,
                    "name,": "audit comment"
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 24
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 25
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.rule_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_zone",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.destination_zone",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_address",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.destination_address",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_user",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_device",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.destination_device",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.negate_source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.negate_destination",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.where",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.dst",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.log_forwarding",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.disable",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.icmp_unreachable",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.service",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.profile_setting",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.target",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "432"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "04:54:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/25 04:54:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/25 04:54:58"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "443"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "04:55:01"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/25 04:55:01"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/25 04:55:01"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.create a policy rule.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.create a policy rule.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.create a policy rule.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 03:15:29"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "03:14:54"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "169"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "harsh_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "harsh_splunk_phantom_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "External Dynamic List test_edl_harsh_ip_list is configured with no certificate profile. Please select a certificate profile for performing server certificate validation."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "custom block policy",
            "identifier": "custom_block_policy",
            "description": "Create a custom block security policy rule.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the policy rule",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 1,
                    "name": "Policy Name"
                },
                "device_group": {
                    "description": "Device group for which to create the policy rule.",
                    "data_type": "string",
                    "required": true,
                    "default": "shared",
                    "order": 2,
                    "name": "Device Group"
                },
                "policy_type": {
                    "description": "",
                    "data_type": "string",
                    "required": true,
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 3,
                    "name": "Policy Type"
                },
                "rule_type": {
                    "description": "Rule type of the policy rule.",
                    "data_type": "string",
                    "value_list": [
                        "universal",
                        "intrazone",
                        "interzone"
                    ],
                    "default": "universal",
                    "required": true,
                    "primary": true,
                    "order": 1,
                    "name": "Rule Type"
                },
                "log_forwarding": {
                    "description": "",
                    "data_type": "string",
                    "order": 18,
                    "name": "Log Forwarding",
                    "allow_list": true
                },
                "direction": {
                    "description": "",
                    "data_type": "string",
                    "value_list": [
                        "from",
                        "to",
                        "both"
                    ],
                    "order": 4,
                    "name": "Description"
                },
                "object_value": {
                    "description": "",
                    "data_type": "string",
                    "required": true,
                    "order": 5,
                    "name": "Description"
                },
                "object_type": {
                    "description": "",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        "ip",
                        "address-group",
                        "edl",
                        "url-category",
                        "application"
                    ],
                    "order": 6,
                    "name": "Description"
                },
                "description": {
                    "description": "",
                    "data_type": "string",
                    "order": 7,
                    "name": "Description"
                },
                "tag": {
                    "description": "",
                    "data_type": "string",
                    "order": 8,
                    "name": "Tags",
                    "allow_list": true
                },
                "icmp_unreachable": {
                    "description": "",
                    "data_type": "boolean",
                    "default": false,
                    "order": 9,
                    "name": "ICMP Unreachable"
                },
                "target": {
                    "description": "",
                    "data_type": "string",
                    "order": 10,
                    "name,": "Target"
                },
                "where": {
                    "description": "",
                    "data_type": "string",
                    "value_list": [
                        "before",
                        "after",
                        "top",
                        "bottom"
                    ],
                    "order": 11,
                    "name": "where"
                },
                "dst": {
                    "description": "",
                    "data_type": "string",
                    "order": 12,
                    "name": "dst"
                },
                "audit_comment": {
                    "description": "",
                    "data_type": "string",
                    "order": 13,
                    "name,": "audit comment"
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 14
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 15
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.direction",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.object_value",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.object_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.icmp_unreachable",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.target",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "move policy",
            "identifier": "move_policy",
            "description": "Move a security policy rule.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the policy rule",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "name": "Policy Name"
                },
                "device_group": {
                    "description": "Device group for which to create the policy rule.",
                    "data_type": "string",
                    "required": true,
                    "default": "shared",
                    "order": 0,
                    "name": "Current Device Group"
                },
                "dst_device_group": {
                    "description": "Device group for which to create the policy rule.",
                    "data_type": "string",
                    "default": "shared",
                    "order": 0,
                    "name": "Destination Device Group"
                },
                "policy_type": {
                    "description": "",
                    "data_type": "string",
                    "required": true,
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 0,
                    "name": "Current Policy Type"
                },
                "dst_policy_type": {
                    "description": "",
                    "data_type": "string",
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 0,
                    "name": "Destination Policy Type"
                },
                "where": {
                    "description": "where to move the policy in the device group",
                    "data_type": "string",
                    "value_list": [
                        "before",
                        "after",
                        "top",
                        "bottom"
                    ],
                    "order": 0,
                    "name": "where"
                },
                "dst": {
                    "description": "reference to which the policy needs to be moved.",
                    "data_type": "string",
                    "order": 0,
                    "name": "Destination"
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 14
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 15
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.response.@to",
                    "data_type": "string",
                    "example_values": [
                        "/config/shared/pre-rulebase/security/rules"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@from",
                    "data_type": "string",
                    "example_values": [
                        "/config/devices/entry[@name='localhost.localdomain']/device-group/entry[@name='harsh_device_group_1_down']/pre-rulebase/security/rules"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.member",
                    "data_type": "string",
                    "example_values": [
                        "dhwani_test_block_rule"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.dst_device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.where",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.dst",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.dst_policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.@to",
                    "data_type": "string",
                    "example_values": [
                        "/config/devices/entry[@name='localhost.localdomain']/device-group/entry[@name='harsh_device_group_1_down']/pre-rulebase/security/rules"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.@from",
                    "data_type": "string",
                    "example_values": [
                        "/config/shared/pre-rulebase/security/rules"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.member",
                    "data_type": "string",
                    "example_values": [
                        "dhwani_test_block_rule"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "227"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "22:13:51"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:13:51"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:14:19"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "238"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "22:14:22"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:14:22"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:14:22"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:14:29"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "22:14:22"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "239"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "harsh_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "harsh_splunk_phantom_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "{ \"uuid\" : \"e4ced49a-58db-40f5-aa5d-400bc1579da8\", \"serial\" : \"007951000393837\", \"rulename\" : \"test_rule_1\", \"ruletype\" : \"security\", \"vsys\" : [{ \"id\" : \"vsys1\", \"dgid\" : 43, \"shadowed-rule\" : [ \"Social Media Block\", \"dhwani_test\"]}]}"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "e4ced49a-58db-40f5-aa5d-400bc1579da8"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "modify policy",
            "identifier": "modify_policy",
            "description": "Modify a security policy rule",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the policy rule",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "name": "Policy Name"
                },
                "rule_type": {
                    "description": "Rule type of the policy rule.",
                    "data_type": "string",
                    "value_list": [
                        "universal",
                        "intrazone",
                        "interzone"
                    ],
                    "default": "universal",
                    "primary": true,
                    "order": 1,
                    "name": "Rule Type"
                },
                "device_group": {
                    "description": "Device group for which to create the policy rule.",
                    "data_type": "string",
                    "required": true,
                    "default": "shared",
                    "order": 2,
                    "name": "Device Group"
                },
                "policy_type": {
                    "description": "Rule base to create the policy in.",
                    "data_type": "string",
                    "required": true,
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 3,
                    "name": "Policy Type"
                },
                "source_zone": {
                    "description": "source zone of policy.",
                    "data_type": "string",
                    "default": "any",
                    "order": 4,
                    "name": "Source Zone"
                },
                "destination_zone": {
                    "description": "destination zone of policy.",
                    "data_type": "string",
                    "default": "any",
                    "order": 5,
                    "name": "Destination Zone"
                },
                "description": {
                    "description": "policy description",
                    "data_type": "string",
                    "order": 6,
                    "name": "Description"
                },
                "source_address": {
                    "description": "source address of policy.",
                    "data_type": "string",
                    "order": 7,
                    "default": "any",
                    "name": "Source Address"
                },
                "destination_address": {
                    "description": "destination address of policy.",
                    "data_type": "string",
                    "order": 8,
                    "default": "any",
                    "name": "Destination Address"
                },
                "source_user": {
                    "description": "source user for policy.",
                    "data_type": "string",
                    "order": 9,
                    "name": "Source User"
                },
                "source_device": {
                    "description": "source device for policy.",
                    "data_type": "string",
                    "order": 10,
                    "default": "any",
                    "name,": "Source Device"
                },
                "destination_device": {
                    "description": "destination device for policy.",
                    "data_type": "string",
                    "order": 11,
                    "default": "any",
                    "name,": "Destination Device"
                },
                "action": {
                    "description": "action for the policy.",
                    "data_type": "string",
                    "default": "allow",
                    "value_list": [
                        "allow",
                        "deny",
                        "drop",
                        "reset client",
                        "reset server",
                        "reset both client and server"
                    ],
                    "order": 12,
                    "name": "Action Type"
                },
                "negate_source": {
                    "description": "",
                    "data_type": "string",
                    "default": "none",
                    "value_list": [
                        "none",
                        "true",
                        "false"
                    ],
                    "order": 27,
                    "name": "Negate Source"
                },
                "negate_destination": {
                    "description": "",
                    "data_type": "string",
                    "default": "none",
                    "value_list": [
                        "none",
                        "true",
                        "false"
                    ],
                    "order": 13,
                    "name": "Negate Destination"
                },
                "application": {
                    "description": "",
                    "data_type": "string",
                    "default": "any",
                    "order": 26,
                    "name": "Application"
                },
                "tag": {
                    "description": "",
                    "data_type": "string",
                    "order": 16,
                    "name": "Tags",
                    "allow_list": true
                },
                "category": {
                    "description": "",
                    "data_type": "string",
                    "order": 17,
                    "name": "category",
                    "allow_list": true
                },
                "log_forwarding": {
                    "description": "",
                    "data_type": "string",
                    "order": 18,
                    "name": "Log Forwarding",
                    "allow_list": true
                },
                "disable": {
                    "description": "",
                    "data_type": "boolean",
                    "default": false,
                    "order": 19,
                    "name": "Disable"
                },
                "icmp_unreachable": {
                    "description": "",
                    "data_type": "boolean",
                    "default": false,
                    "order": 20,
                    "name": "ICMP Unreachable"
                },
                "service": {
                    "description": "",
                    "data_type": "string",
                    "default": "any",
                    "order": 21,
                    "name": "Service"
                },
                "profile_setting": {
                    "description": "",
                    "data_type": "string",
                    "value_list": [
                        "profiles",
                        "group"
                    ],
                    "order": 22,
                    "name": "Profile Setting"
                },
                "target": {
                    "description": "",
                    "data_type": "string",
                    "order": 23,
                    "name,": "Target"
                },
                "audit_comment": {
                    "description": "",
                    "data_type": "string",
                    "order": 23,
                    "name,": "audit comment"
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 24
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 25
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.rule_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_zone",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.destination_zone",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_address",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.destination_address",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_user",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_device",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.destination_device",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.negate_source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.negate_destination",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.log_forwarding",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.disable",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.category",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.icmp_unreachable",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.service",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.profile_setting",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.target",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete policy",
            "description": "Delete a security policy rule",
            "type": "generic",
            "identifier": "delete_policy",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the policy rule to delete",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "name": "Policy Name"
                },
                "policy_type": {
                    "description": "Pre rule or Post rule",
                    "data_type": "string",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 1,
                    "required": true
                },
                "device_group": {
                    "description": "Device group where the policy rule is present",
                    "data_type": "string",
                    "required": true,
                    "default": "shared",
                    "order": 2,
                    "name": "Device Group"
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 3
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "640"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:31:30"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/29 03:31:30"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/29 03:31:54"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "651"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:31:57"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/29 03:31:57"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/29 03:31:57"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:12:56"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "22:12:50"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "214"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "harsh_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "harsh_splunk_phantom_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "{ \"uuid\" : \"e4ced49a-58db-40f5-aa5d-400bc1579da8\", \"serial\" : \"007951000393837\", \"rulename\" : \"test_rule_1\", \"ruletype\" : \"security\", \"vsys\" : [{ \"id\" : \"vsys1\", \"dgid\" : 43, \"shadowed-rule\" : [ \"Social Media Block\", \"dhwani_test\"]}]}"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "e4ced49a-58db-40f5-aa5d-400bc1579da8"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "string"
                }
            ],
            "render": {
                "width": 12,
                "title": "Delete Policy",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create address group",
            "description": "create address group",
            "type": "generic",
            "identifier": "create_address_group",
            "read_only": false,
            "parameters": {
                "address_grp_name": {
                    "description": "Name of theaddress group to be created.",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "name": "address name"
                },
                "device_group": {
                    "description": "device group to create the address group in.",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "name": "device group"
                },
                "disable_override": {
                    "description": "whether to disable override the address group or not.",
                    "data_type": "boolean",
                    "order": 0,
                    "name": "device group"
                },
                "type": {
                    "description": "type of the address group.",
                    "data_type": "string",
                    "default": "static",
                    "value_list": [
                        "static",
                        "dynamic"
                    ],
                    "required": true,
                    "order": 0,
                    "name": "type"
                },
                "description": {
                    "description": "description for the address group.",
                    "data_type": "string",
                    "order": 0,
                    "name": "description"
                },
                "address_or_match": {
                    "description": "address list if the type is static and match criteria if type is dynamic.",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "name": "address or match"
                },
                "tag": {
                    "description": "list of tags to mark the address group under.",
                    "data_type": "string",
                    "order": 0,
                    "name": "tag"
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 3
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 4
                }
            },
            "output": [],
            "render": {
                "width": 12,
                "title": "Create Address Group",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "modify address group",
            "description": "modify address group",
            "type": "generic",
            "identifier": "modify_address_group",
            "read_only": false,
            "parameters": {
                "address_grp_name": {
                    "description": "Name of theaddress group to be created.",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "name": "address name"
                },
                "device_group": {
                    "description": "device group to create the address group in.",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "name": "device group"
                },
                "disable_override": {
                    "description": "whether to disable override the address group or not.",
                    "data_type": "boolean",
                    "order": 0,
                    "name": "device group"
                },
                "type": {
                    "description": "type of the address group.",
                    "data_type": "string",
                    "value_list": [
                        "static",
                        "dynamic"
                    ],
                    "order": 0,
                    "name": "type"
                },
                "description": {
                    "description": "description for the address group.",
                    "data_type": "string",
                    "order": 0,
                    "name": "description"
                },
                "address_or_match": {
                    "description": "address list if the type is static and match criteria if type is dynamic.",
                    "data_type": "string",
                    "order": 0,
                    "name": "address or match"
                },
                "tag": {
                    "description": "list of tags to mark the address group under.",
                    "data_type": "string",
                    "order": 0,
                    "name": "tag"
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 3
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 4
                }
            },
            "output": [],
            "render": {
                "width": 12,
                "title": "Modify Address Group",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create address",
            "identifier": "create_address",
            "description": "Create an address on the panorama platform",
            "verbose": "<p>The 'ip' paramater support 4-type of ip address object as follow. <ol><li>IP Netmask\u2014Enter the IPv4 or IPv6 address or IP address range using the following notation: ip_address/mask or ip_address where the mask is the number of significant binary digits used for the network portion of the address. Ideally, for IPv6 addresses, you specify only the network portion, not the host portion. For example:</li><ul>192.168.80.150/32\u2014Indicates one address.</li><li>192.168.80.0/24\u2014Indicates all addresses from 192.168.80.0 through 192.168.80.255.</li><li>2001:db8::/32</li><li>2001:db8:123:1::/64</li></ul><li>IP Range\u2014Enter a range of addresses using the following format: ip_address-ip_address where both ends of the range are IPv4 addresses or both are IPv6 addresses. For example: 2001:db8:123:1::1-2001:db8:123:1::22</li><li>IP Wildcard Mask\u2014Enter an IP wildcard address in the format of an IPv4 address followed by a slash and a mask (which must begin with a zero); for example, 10.182.1.1/0.127.248.0. In the wildcard mask, a zero (0) bit indicates that the bit being compared must match the bit in the IP address that is covered by the 0. A one (1) bit in the mask is a wildcard bit, meaning the bit being compared need not match the bit in the IP address that is covered by the 1. Convert the IP address and the wildcard mask to binary. To illustrate the matching: on binary snippet 0011, a wildcard mask of 1010 results in four matches (0001, 0011, 1001, and 1011).</li><li>FQDN\u2014Enter the domain name. The FQDN initially resolves at commit time. An FQDN entry is subsequently refreshed based on the TTL of the FQDN if the TTL is greater than or equal to the Minimum FQDN Refresh Time; otherwise the FQDN entry is refreshed at the Minimum FQDN Refresh Time. The FQDN is resolved by the system DNS server or a DNS proxy object if a proxy is configured.</li></ol></p>",
            "read_only": false,
            "type": "generic",
            "parameters": {
                "name": {
                    "description": "Name of address",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "panorama address name"
                    ]
                },
                "ip": {
                    "description": "IP address",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                "description": {
                    "description": "Description of address",
                    "data_type": "string",
                    "order": 2
                },
                "tags": {
                    "description": "Tags want to apply on an address",
                    "data_type": "string",
                    "order": 3
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 4,
                    "required": true,
                    "contains": [
                        "panorama device name"
                    ]
                },
                "disable_override": {
                    "description": "Dissable override on an address",
                    "data_type": "string",
                    "value_list":[
                        "yes",
                        "no"
                    ],
                    "default": "no",
                    "order": 5
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 6
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 7
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "column_name": "Address Name",
                    "column_order": 0,
                    "contains": [
                        "panorama address name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "column_name": "IP",
                    "column_order": 1,
                    "contains": [
                        "ip",
                        "ipv6"
                    ]
                },
                {
                    "data_path": "action_result.parameter.tags",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.disable_override",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 2,
                    "contains": [
                        "panorama device name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "622"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:06:14"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/11 03:06:14"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/11 03:06:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_address.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_address.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_address.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "633"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:06:43"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/11 03:06:43"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/11 03:06:43"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "share"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Create Address"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "reference address",
            "identifier": "reference_address",
            "description": "Fetch address details for the supplied address name",
            "read_only": true,
            "type": "investigate",
            "parameters": {
                "name": {
                    "description": "Name of address",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "panorama address name"
                    ]
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "contains": [
                        "panorama device name"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "column_name": "Address name",
                    "column_order": 0,
                    "contains": [
                        "panorama address name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 1,
                    "contains": [
                        "panorama device name"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Reference Address",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete address",
            "identifier": "delete_address",
            "description": "Delete address details for the supplied address name",
            "read_only": false,
            "type": "generic",
            "parameters": {
                "name": {
                    "description": "Name of address",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "panorama address name"
                    ]
                },
                "device_group": {
                    "description": "Device group to configure, or 'shared'",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "contains": [
                        "panorama device name"
                    ]
                },
                "use_partial_commit": {
                    "description": "Whether to perform Partial commit admin-level changes. Config's username is included as the administrator name in the request. Otherwise, plain commit is used by default",
                    "data_type": "boolean",
                    "order": 2
                },
                "should_commit_changes": {
                    "description": "Whether to commit both changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": false,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "column_name": "Address Name",
                    "column_order": 0,
                    "contains": [
                        "panorama address name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 1,
                    "contains": [
                        "panorama device name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "example_values": []
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Delete Address",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.9.1-py3-none-any.whl"
            },
            {
                "module": "dict2xml",
                "input_file": "wheels/py3/dict2xml-1.7.3-py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.3.2.post1-py3-none-any.whl"
            },
            {
                "module": "xmltodict",
                "input_file": "wheels/shared/xmltodict-0.12.0-py2.py3-none-any.whl"
            }
        ]
    },
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.9.1-py3-none-any.whl"
            },
            {
                "module": "dict2xml",
                "input_file": "wheels/py3/dict2xml-1.7.3-py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.5-py3-none-any.whl"
            },
            {
                "module": "xmltodict",
                "input_file": "wheels/shared/xmltodict-0.12.0-py2.py3-none-any.whl"
            }
        ]
    }
}

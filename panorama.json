{
    "appid": "3d88e427-0e61-4311-a613-bbddeac532e0",
    "name": "Panorama",
    "description": "This app integrates with the Palo Alto Networks Panorama product to support several containment and investigative actions",
    "publisher": "Splunk",
    "type": "firewall",
    "main_module": "panorama_connector.py",
    "app_version": "5.0.0",
    "utctime_updated": "2022-01-27T22:10:12.000000Z",
    "package_name": "phantom_panorama",
    "product_vendor": "Palo Alto Networks",
    "product_name": "Panorama",
    "product_version_regex": ".*",
    "min_phantom_version": "6.1.0",
    "python_version": "3",
    "fips_compliant": true,
    "latest_tested_versions": [
        "On-prem panorama version 11.0.2 tested on October 17, 2023"
    ],
    "logo": "logo_panorama.svg",
    "logo_dark": "logo_panorama_dark.svg",
    "license": "Copyright (c) 2016-2023 Splunk Inc.",
    "configuration": {
        "device": {
            "description": "Device IP/Hostname",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "verify_server_cert": {
            "description": "Verify server certificate",
            "data_type": "boolean",
            "default": false,
            "order": 1
        },
        "username": {
            "description": "Username",
            "data_type": "string",
            "required": true,
            "order": 2
        },
        "password": {
            "description": "Password",
            "data_type": "password",
            "required": true,
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "block url",
            "description": "Block an URL",
            "verbose": "This action does the following to block a URL:<ul><li>Create an URL Filtering profile object named '<b>Phantom URL List for [device_group]</b>' containing the URL to block.</br>If the profile is already present, then it will be updated to include the URL to block. IMPORTANT: For Version 9 and above, a URL Filtering profile no longer includes allow-list/block-list. The official workaround is to use a Custom URL category instead. Therefore, we create a new Custom URL category with the same name as the profile and link it to the profile. Then, We configure the profile to block the URL category on both 'SITE ACCESS' and 'USER CREDENTIAL SUBMISSION' columns.</li><li>If a <b>policy_name</b> is provided, re-configure the policy (specified in the <b>policy_name</b> parameter) to use the created URL Filtering profile. The URL filtering profile created in the previous step will be linked to the Profile Settings of the specified policy.</br>If the policy is not found on the device, the action will return an error.</li><li>If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul>",
            "type": "contain",
            "identifier": "block_url",
            "read_only": false,
            "undo": "unblock url",
            "parameters": {
                "url": {
                    "description": "URL to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "url"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group in which you want to block url",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 2,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 3,
                    "contains": [
                        "panorama policy name"
                    ],
                    "primary": true
                },
                "audit_comment": {
                    "description": "Audit comment to be used with the policy name. Maximum 256 characters",
                    "data_type": "string",
                    "order": 4
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 5
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string",
                    "example_values": [
                        "updated description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "contains": [
                        "panorama policy name"
                    ],
                    "example_values": [
                        "test_policy"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.url",
                    "data_type": "string",
                    "column_name": "URL",
                    "column_order": 0,
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "https://www.test.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@loc",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_dg_default"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@name",
                    "data_type": "string",
                    "example_values": [
                        "test_playbook_policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:32"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@uuid",
                    "data_type": "string",
                    "example_values": [
                        "6eca9cdf-2c3b-4dc8-bf8b-4b967f4519fa"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.#text",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "12.23.34.45"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "auctions"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.#text",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:32"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "3pc"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "Test playbook policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "23.34.45.67"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.set_url_filtering.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.set_url_filtering.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.set_url_filtering.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_audit_comment.response.result",
                    "data_type": "string",
                    "example_values": [
                        "Successfully added comment for xpath"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_audit_comment.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_url_to_url_category.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_url_to_url_category.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_url_to_url_category.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "10361"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:18:37"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 03:18:37"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 03:18:59"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "10362"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:19:02"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 03:19:02"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 03:19:02"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member",
                    "data_type": "string",
                    "example_values": [
                        "application-default"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 05:00:06"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "Phantom URL List for Shared"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 05:00:06"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "23"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "23"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 05:02:10"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "05:01:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "3054"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "test_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "23.34.45.67"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:26:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:26:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:26:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:26:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "12.23.34.45"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.group.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 00:05:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.group.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.group.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description",
                    "data_type": "string",
                    "example_values": [
                        "Test playbook policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/09 05:23:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/09 05:23:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "13"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "13"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "2ch"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/09 05:23:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "13"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/09 05:23:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/09 05:23:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "13"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "13"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member",
                    "data_type": "string",
                    "example_values": [
                        "Phantom URL List for do_not_del"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Block URL",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock url",
            "description": "Unblock an URL",
            "verbose": "For Version 8 and below, this action will remove the URL from the URL Filtering profile that was created/updated in the <b>block url</b> action. For Version 9 and above, this action will remove the URL from the Custom URL category that was created/updated in the <b>block url</b> action. If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.",
            "type": "correct",
            "identifier": "unblock_url",
            "read_only": false,
            "undo": "block url",
            "parameters": {
                "url": {
                    "description": "URL to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "url"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group in which you want to unblock url",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 2
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.url",
                    "data_type": "string",
                    "column_name": "URL",
                    "column_order": 0,
                    "contains": [
                        "url"
                    ],
                    "example_values": [
                        "www.test.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.delete_url_from_url_category.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_url_from_url_category.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_url_from_url_category.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Unblock URL",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "block application",
            "description": "Block an application",
            "verbose": "This action does the following to block an application:<ul><li>Create an Application group named '<b>Phantom App List for [device_group]</b>' containing the application to block.</br>If the group is already present, then it will be updated to include the application.</li><li>If a <b>policy_name</b> is provided, re-configure the policy (specified in the <b>policy_name</b> parameter) to use the created application group.</br>If the policy is not found on the device, the action will return an error.</li><li>If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul>To get a list of applications that can be blocked, execute the <b>list applications</b> action.",
            "type": "contain",
            "identifier": "block_application",
            "read_only": false,
            "undo": "unblock application",
            "parameters": {
                "application": {
                    "description": "Application to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "network application"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group in which you want to block application",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 2,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 3,
                    "contains": [
                        "panorama policy name"
                    ],
                    "primary": true
                },
                "audit_comment": {
                    "description": "Audit comment to be used with the policy name. Maximum 256 characters",
                    "data_type": "string",
                    "order": 4
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 5
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 6
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ],
                    "example_values": [
                        "1c-enterprise"
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string",
                    "example_values": [
                        "updated description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "contains": [
                        "panorama policy name"
                    ],
                    "example_values": [
                        "test_policy"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.add_application_to_application_group.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_application_to_application_group.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_application_to_application_group.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "2847"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "02:34:37"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:34:37"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:35:02"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@loc",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@name",
                    "data_type": "string",
                    "example_values": [
                        "test_pre_rule"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:29:58"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@uuid",
                    "data_type": "string",
                    "example_values": [
                        "e97777da-aad8-44e0-9206-492172b9d18e"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.#text",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "application-default"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.#text",
                    "data_type": "string",
                    "example_values": [
                        "intrazone"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:29:58"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "3pc"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:26:52"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "15"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "2858"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "02:35:03"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:35:03"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:35:03"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_audit_comment.response.result",
                    "data_type": "string",
                    "example_values": [
                        "Successfully added comment for xpath"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_audit_comment.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "airdroid"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:58:38"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 03:00:03"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "02:59:33"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "2893"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "test_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member",
                    "data_type": "string",
                    "example_values": [
                        "application-default"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "12.23.34.45"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "Test playbook policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "23.34.45.67"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 00:05:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 00:05:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.group.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 00:05:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.group.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.group.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 00:05:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "Phantom URL List for do_not_del"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:26:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:26:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description",
                    "data_type": "string",
                    "example_values": [
                        "Test playbook policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member",
                    "data_type": "string",
                    "example_values": [
                        "Phantom URL List for do_not_del"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member",
                    "data_type": "string",
                    "example_values": [
                        "3pc"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Block Application"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock application",
            "description": "Unblock an application",
            "verbose": "This action will remove the application from the Application group that was created/updated in the <b>block application</b> action. If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.<br>Note: This action will pass for any non-existing application name as API doesn't return an error for an incorrect application name.",
            "type": "correct",
            "identifier": "unblock_application",
            "undo": "block application",
            "read_only": false,
            "parameters": {
                "application": {
                    "description": "Application to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "network application"
                    ],
                    "primary": true,
                    "required": true
                },
                "device_group": {
                    "description": "Device group in which you want to unblock application",
                    "data_type": "string",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 2
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ],
                    "example_values": [
                        "1c-enterprise"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.delete_application_from_application_group.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_application_from_application_group.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_application_from_application_group.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "2921"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:19:06"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 03:19:06"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 03:19:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "2932"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:19:32"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 03:19:32"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 03:19:32"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 03:20:03"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "03:19:33"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "2933"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "test_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Unblock Application"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "block ip",
            "description": "Block an IP",
            "verbose": "<p>This action uses a multistep approach to block an IP. The approach differs whether <b>is_source_address</b> is true or not.  By default, it is false.  The procedure is as follows:</p><ul><li>Create an address entry named '<b>[ip_address] Added By Splunk SOAR</b>' with the specified IP address<li>If the option <b>should_add_tag</b> is enabled, the container id of the phantom action is added as a tag to the address entry when it's created<li>If <b>is_source_address</b> is false:<ul><li> add this entry to an address group called <b>Phantom Network List for [device_group]</b></li><li>The address entry and group will be created in the device group specified in the <b>device_group</b> parameter</li><li>If a <b>policy_name</b> is provided, configure the address group as a <i>destination</i> to the policy specified in the <b>policy_name</b> parameter</li></ul>If <b>is_source_address</b> is true:<ul><li>add this entry to an address group called <b>PhantomNtwrkSrcLst[device_group]</b></li><li>The address entry and group will be created in the device group specified in the <b>device_group</b> parameter</li><li>If a <b>policy_name</b> is provided, configure the address group as a <i>source</i> to the policy specified in the <b>policy_name</b> parameter</ul><b>Note:</b> If the policy is not found on the device, the action will return an error.<li>If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.</li></ul><p><b>Please Note:</b> If the Panorama Policy that is used to block a source or destination address has 'Any' in the Source Address or Destination Address field, Block IP will succeed but it will not work.  Therefore, make sure that the policy that the address group will be appended to has no 'Any' in the field that you are blocking from.  i.e, if you are blocking an IP from source, make sure the policy does not have 'Any' under Source Address.</p><p>The address group name is limited to 32 characters.  The device group chosen will be appended to the address group name created.  If the resulting name is too long, the name will be trimmed, which may result in clipped or unusual names.  This is as intended, as it is a limitation by Panorama.</p>",
            "type": "contain",
            "identifier": "block_ip",
            "read_only": false,
            "undo": "unblock ip",
            "parameters": {
                "ip": {
                    "description": "IP to block",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "ip"
                    ],
                    "primary": true,
                    "required": true
                },
                "is_source_address": {
                    "description": "Source address",
                    "data_type": "boolean",
                    "order": 1
                },
                "device_group": {
                    "description": "Device group in which you want to block ip",
                    "data_type": "string",
                    "order": 2,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "policy_type": {
                    "description": "Block policy type",
                    "data_type": "string",
                    "order": 3,
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ]
                },
                "policy_name": {
                    "description": "Policy to use",
                    "data_type": "string",
                    "order": 4,
                    "contains": [
                        "panorama policy name"
                    ],
                    "primary": true
                },
                "audit_comment": {
                    "description": "Audit comment to be used with the policy name. Maximum 256 characters",
                    "data_type": "string",
                    "order": 5
                },
                "should_add_tag": {
                    "description": "Whether a new tag should added as part of adding a new IP address",
                    "data_type": "boolean",
                    "default": true,
                    "order": 6
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 7
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 8
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string",
                    "example_values": [
                        "updated description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "column_name": "IP",
                    "column_order": 0,
                    "contains": [
                        "ip"
                    ],
                    "example_values": [
                        "10.1.1.1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.is_source_address",
                    "data_type": "boolean",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "contains": [
                        "panorama policy name"
                    ],
                    "example_values": [
                        "test_policy"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_add_tag",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.add_address_entry.link_tag_to_ip.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_address_entry.link_tag_to_ip.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_address_entry.link_tag_to_ip.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_ip_to_address_group.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_ip_to_address_group.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_ip_to_address_group.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_address_entry.add_tag.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_address_entry.add_tag.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.add_address_entry.add_tag.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@loc",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@name",
                    "data_type": "string",
                    "example_values": [
                        "DO_NOT_DELETE"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 00:16:55"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@uuid",
                    "data_type": "string",
                    "example_values": [
                        "6c809822-a080-46f6-b28e-e1dd5150719c"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 00:08:51"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "484"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.target.negate",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "508"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.group-tag",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_tag"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description",
                    "data_type": "string",
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 00:16:55"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "508"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_security_policy.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.#text",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "12.23.34.45"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "auctions"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.category.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.#text",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:32"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "3pc"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "Test playbook policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "23.34.45.67"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "Phantom URL List for do_not_del"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.profile-setting.profiles.url-filtering.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_audit_comment.response.result",
                    "data_type": "string",
                    "example_values": [
                        "Successfully added comment for xpath"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_audit_comment.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "23.34.45.67"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "12.23.34.45"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:44:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 00:05:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 00:05:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:26:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.#text",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:26:35"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member",
                    "data_type": "string",
                    "example_values": [
                        "12.23.34.45"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.disabled",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member",
                    "data_type": "string",
                    "example_values": [
                        "23.34.45.67"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-source",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.icmp-unreachable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.negate-destination",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Block IP",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "unblock ip",
            "description": "Unblock an IP",
            "verbose": "This action will remove the address entry from the Address group that was created/updated in the <b>block ip</b> action.  This action behaves differently based upon whether <b>is_source_address</b> is true or false.  By default, it is false.<br>If <b>is_source_address</b> is false:<ul><li>The given IP address will be removed from the <b>Phantom Network List for [device_group]</b> Address Group.</li></ul>If <b>is_source_address</b> is true:<ul><li>The given IP address will be removed from the <b>PhantomNtwrkSrcLst[device_group]</b> Address Group.</li></ul>If <b>should_commit_changes</b> is true, the action then proceeds to <b>commit</b> the changes to Panorama, followed by a commit to the device group. If the device group happens to be <b>shared</b>, then a commit will be sent to all the device groups belonging to it.",
            "type": "correct",
            "identifier": "unblock_ip",
            "read_only": false,
            "undo": "block ip",
            "parameters": {
                "ip": {
                    "description": "IP to unblock",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "ip"
                    ],
                    "primary": true,
                    "required": true
                },
                "is_source_address": {
                    "description": "Source address",
                    "data_type": "boolean",
                    "order": 1
                },
                "device_group": {
                    "description": "Device group in which you want to unblock ip",
                    "data_type": "string",
                    "order": 2,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 3
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ip",
                    "data_type": "string",
                    "column_name": "IP",
                    "column_order": 0,
                    "contains": [
                        "ip"
                    ],
                    "example_values": [
                        "10.1.1.1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.is_source_address",
                    "data_type": "boolean",
                    "example_values": [
                        true
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.delete_ip_from_address_group.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_ip_from_address_group.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_ip_from_address_group.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Unblock IP",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list applications",
            "description": "List the applications that the device knows about and can block",
            "type": "investigate",
            "identifier": "list_apps",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "column_name": "Application",
                    "column_order": 0,
                    "contains": [
                        "network application"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@ori_country",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.@ori_lauguage",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.able-to-transfer-file",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.alg-disable-capability",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.analysis",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.application-container",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.breaks-decryption",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.category",
                    "data_type": "string",
                    "column_name": "Category",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.child",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.consume-big-bandwidth",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.interval",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.key-by.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rule-match",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.interval",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.threshold",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.correlate.rules.entry.track-by.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.data-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.decode.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.*.ident-by-ip-protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.*.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.ident-by-icmp-type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.ident-by-ip-protocol",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.default.port.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.deprecated",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "column_name": "Description",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.doc-review",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.enable-url-filter",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.evasive-behavior",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-forward",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-forward",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.file-type-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ha-safe",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.has-known-vulnerability",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ident-by-dport",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ident-by-sport",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.implicit-use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.implicit-use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.netx-vmotion",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.not-support-ssl",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.ottawa-name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.pervasive-use",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.preemptive",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.prone-to-misuse",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.*.@name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.*.link",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.@name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.references.entry.link",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.related-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.risk",
                    "data_type": "string",
                    "column_name": "Risk",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.risk",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.subcategory",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tcp-discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tcp-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.technology",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-applications.member.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.tunnel-other-application.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.udp-discard-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.udp-timeout",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.*.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.*.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.use-applications.member.@minver",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.used-by-malware",
                    "data_type": "string",
                    "column_name": "Used By Malware",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.virus-ident",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_applications",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total applications: 2421"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Application List"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "description": "Run a query on Panorama",
            "verbose": "This action runs a query on Panorama and returns the set of logs matching the search criteria.<br><br>Use the <b>range</b> parameter to limit the number of logs returned by the action. If no range is given, the action will use the range <b>1-5000</b>. The action can retrieve up to a maximum of 5000 logs. If more logs need to be retrieved, rerun the action with the next sequential range of values.<br><br>The <b>log_type</b> parameter can be one of the following:<ul><li><b>traffic</b> - traffic logs</li><li><b>url</b> - URL filtering logs</li><li><b>data</b> - data filtering logs</li><li><b>threat</b> - threat logs</li><li><b>config</b> - config logs</li><li><b>system</b> - system logs</li><li><b>hipmatch</b> - HIP match logs</li><li><b>wildfire</b> - wildfire logs</li><li><b>corr</b> - correlated event logs</li><li><b>corr-categ</b> - correlated events by category</li><li><b>corr-detail</b> - correlated event details.</li></ul>",
            "type": "investigate",
            "identifier": "run_query",
            "read_only": true,
            "parameters": {
                "log_type": {
                    "description": "Log type to query",
                    "data_type": "string",
                    "order": 0,
                    "default": "traffic",
                    "value_list": [
                        "traffic",
                        "url",
                        "corr",
                        "data",
                        "threat",
                        "config",
                        "system",
                        "hipmatch",
                        "wildfire",
                        "corr-categ",
                        "corr-detail"
                    ],
                    "required": true
                },
                "query": {
                    "description": "Query to run",
                    "data_type": "string",
                    "order": 1,
                    "required": true
                },
                "range": {
                    "description": "Range of result logs to retrieve (e.g 1-5000 or 100-700)",
                    "data_type": "string",
                    "order": 2
                },
                "direction": {
                    "description": "Direction to search",
                    "data_type": "string",
                    "default": "backward",
                    "value_list": [
                        "backward",
                        "forward"
                    ],
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 0,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.direction",
                    "data_type": "string",
                    "example_values": [
                        "backward"
                    ]
                },
                {
                    "data_path": "action_result.parameter.log_type",
                    "data_type": "string",
                    "example_values": [
                        "traffic"
                    ]
                },
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string",
                    "example_values": [
                        "( port.dst eq 161 )"
                    ]
                },
                {
                    "data_path": "action_result.parameter.range",
                    "data_type": "string",
                    "example_values": [
                        "1-5000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.cached-logs",
                    "data_type": "string",
                    "example_values": [
                        "21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.id",
                    "data_type": "string",
                    "example_values": [
                        "1316"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "15:46:37"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "15:46:37"
                    ]
                },
                {
                    "data_path": "action_result.data.*.job.tlast",
                    "data_type": "string",
                    "example_values": [
                        "16:00:00"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.@count",
                    "data_type": "string",
                    "example_values": [
                        "21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.@progress",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.@logid",
                    "data_type": "string",
                    "example_values": [
                        "7592"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.action_source",
                    "data_type": "string",
                    "example_values": [
                        "from-policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.actionflags",
                    "data_type": "string",
                    "example_values": [
                        "0x8000000000000000"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.app",
                    "data_type": "string",
                    "example_values": [
                        "snmp-base"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes",
                    "data_type": "string",
                    "example_values": [
                        "79"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes_received",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.bytes_sent",
                    "data_type": "string",
                    "example_values": [
                        "79"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.captive-portal",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.category",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.config_ver",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.cpadding",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.decrypt-mirror",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.device_name",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_1",
                    "data_type": "string",
                    "example_values": [
                        "17"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_2",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_3",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dg_hier_level_4",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.domain",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ],
                    "contains": [
                        "domain"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dport",
                    "data_type": "string",
                    "column_name": "Destination Port",
                    "column_order": 5,
                    "example_values": [
                        "161"
                    ],
                    "contains": [
                        "port"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dst",
                    "data_type": "string",
                    "column_name": "Destination IP",
                    "column_order": 4,
                    "example_values": [
                        "10.18.3.2"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.dstloc",
                    "data_type": "string",
                    "example_values": [
                        "10.0.0.0-10.255.255.255"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.elapsed",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-flagged",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-nat",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-pcap",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-proxy",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flag-url-denied",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.flags",
                    "data_type": "string",
                    "example_values": [
                        "0x64"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.from",
                    "data_type": "string",
                    "example_values": [
                        "Internal Zone"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.inbound_if",
                    "data_type": "string",
                    "example_values": [
                        "ethernet1/1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.logset",
                    "data_type": "string",
                    "example_values": [
                        "Forward all logs from DG2"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.natdport",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.natsport",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.non-std-dport",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.outbound_if",
                    "data_type": "string",
                    "example_values": [
                        "ethernet1/1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.packets",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.padding",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pbf-c2s",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pbf-s2c",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pkts_received",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.pkts_sent",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.proto",
                    "data_type": "string",
                    "example_values": [
                        "udp"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.receive_time",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:54"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.repeatcnt",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.rule",
                    "data_type": "string",
                    "example_values": [
                        "Test URL Security Policy"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.seqno",
                    "data_type": "string",
                    "example_values": [
                        "1715"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.serial",
                    "data_type": "string",
                    "example_values": [
                        "007200000031753"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.session_end_reason",
                    "data_type": "string",
                    "example_values": [
                        "aged-out"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sessionid",
                    "data_type": "string",
                    "column_name": "Session ID",
                    "column_order": 1,
                    "example_values": [
                        "58"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sport",
                    "data_type": "string",
                    "column_name": "Source Port",
                    "column_order": 3,
                    "example_values": [
                        "64453"
                    ],
                    "contains": [
                        "port"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.src",
                    "data_type": "string",
                    "column_name": "Source IP",
                    "column_order": 2,
                    "example_values": [
                        "10.10.0.18"
                    ],
                    "contains": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.srcloc",
                    "data_type": "string",
                    "example_values": [
                        "10.0.0.0-10.255.255.255"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.start",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:21"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.subtype",
                    "data_type": "string",
                    "example_values": [
                        "end"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.sym-return",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.temporary-match",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.time_generated",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.time_received",
                    "data_type": "string",
                    "example_values": [
                        "2017/06/23 15:35:50"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.to",
                    "data_type": "string",
                    "example_values": [
                        "Internal Zone"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.transaction",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.type",
                    "data_type": "string",
                    "example_values": [
                        "TRAFFIC"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.vsys",
                    "data_type": "string",
                    "example_values": [
                        "vsys1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.log.logs.entry.*.vsys_id",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.num_logs",
                    "data_type": "numeric",
                    "example_values": [
                        21
                    ]
                },
                {
                    "data_path": "action_result.summary.run_query.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ]
                },
                {
                    "data_path": "action_result.summary.run_query.response.result.job",
                    "data_type": "string",
                    "example_values": [
                        "852"
                    ]
                },
                {
                    "data_path": "action_result.summary.run_query.response.result.msg.line",
                    "data_type": "string",
                    "example_values": [
                        "query job enqueued with jobid 852"
                    ]
                },
                {
                    "data_path": "action_result.summary.run_query.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "852"
                    ]
                },
                {
                    "data_path": "action_result.summary.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "04:32:51"
                    ]
                },
                {
                    "data_path": "action_result.summary.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "04:32:51"
                    ]
                },
                {
                    "data_path": "action_result.summary.finished_job.tlast",
                    "data_type": "string",
                    "example_values": [
                        "16:00:00"
                    ]
                },
                {
                    "data_path": "action_result.summary.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.finished_job.cached-logs",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Num logs: 1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Query"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "commit changes",
            "description": "Commit changes to the firewall and device groups",
            "verbose": "The action proceeds to commit the changes to Panorama, followed by a commit to the device group. If the device group happens to be shared, then a commit will be sent to all the device groups belonging to it. Regardless of the value provided in device group parameter, pending changes of all the device groups will be committed and the action will then proceed with pushing the changes to the firewall (if linked to that device group) of mentioned device group.",
            "type": "generic",
            "identifier": "commit_changes",
            "read_only": false,
            "parameters": {
                "device_group": {
                    "description": "Device group whose changes you want to push to firewall",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 0,
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "2834"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "02:22:04"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:22:04"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:22:30"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "2845"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "02:22:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:22:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 02:22:31"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "NO"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/17 22:32:21"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "22:31:33"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "3970"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "test_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "{ \"uuid\" : \"8ec4cbb8-4ab9-4ae3-8a9f-7cb3d9b3324a\", \"serial\" : \"007951000393837\", \"rulename\" : \"test_91\", \"ruletype\" : \"security\", \"vsys\" : [{ \"id\" : \"vsys1\", \"dgid\" : 43, \"shadowed-rule\" : [ \"Allow Panorama Comm\", \"General Blocked Sites\", \"LAN to WAN internet Access\", \"Social Media Block\", \"cp_1\", \"cp_2\", \"create_policy\", \"create_policy_1\", \"create_policy_2\", \"create_policy_3\", \"create_policy_4\", \"create_policy_4fe\", \"create_policy_4fed\", \"test_test_policy\", \"test2    .-_\", \"test1 test\", \"part_5\", \"test\", \"test12345\", \"test_123_policy\", \"test_create_policy\", \"test_pol_12\", \"test_policy_123\", \"test_post_rule_shared\", \"example\"]}]}"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "8ec4cbb8-4ab9-4ae3-8a9f-7cb3d9b3324a"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "no"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Message",
                    "column_order": 2,
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Commit"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get threat pcap",
            "identifier": "get_threat_pcap",
            "description": "Export a Threat PCAP file",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "pcap_id": {
                    "description": "PCAP ID required to fetch Threat PCAP",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0,
                    "contains": [
                        "panorama pcap id"
                    ]
                },
                "device_name": {
                    "description": "Device Name required to fetch Threat PCAP",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 1,
                    "contains": [
                        "panorama device name"
                    ]
                },
                "session_id": {
                    "description": "Session ID required to fetch Threat PCAP",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 2,
                    "contains": [
                        "panorama session id"
                    ]
                },
                "search_time": {
                    "description": "Search time that the Threat PCAP was received on the firewall (yyyy/mm/dd hr:min:sec)",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 3,
                    "contains": [
                        "timestamp"
                    ]
                },
                "filename": {
                    "description": "Filename of exported PCAP file",
                    "data_type": "string",
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_name",
                    "data_type": "string",
                    "contains": [
                        "panorama device name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.filename",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.pcap_id",
                    "data_type": "string",
                    "contains": [
                        "panorama pcap id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.search_time",
                    "data_type": "string",
                    "contains": [
                        "timestamp"
                    ]
                },
                {
                    "data_path": "action_result.parameter.session_id",
                    "data_type": "string",
                    "contains": [
                        "panorama session id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.vault_id",
                    "data_type": "string",
                    "column_name": "Vault ID",
                    "column_order": 0,
                    "example_values": [
                        "testff855c129457453de6a5cde58d19add6fbe31"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file_name",
                    "data_type": "string",
                    "column_name": "File name",
                    "column_order": 1,
                    "example_values": [
                        "test.pcap"
                    ]
                },
                {
                    "data_path": "action_result.summary.message",
                    "data_type": "string",
                    "example_values": [
                        "PCAP file added successfully to the vault"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Message: PCAP file added successfully to the vault"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Get Threat PCAP"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list edl",
            "identifier": "list_edl",
            "description": "List External Dynamic Lists",
            "read_only": true,
            "type": "investigate",
            "parameters": {
                "device_group": {
                    "description": "Device group whose edl you want to list (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "example_values": [
                        "dg5"
                    ],
                    "contains": [
                        "panorama device group"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "column_name": "EDL Name",
                    "column_order": 0,
                    "contains": [
                        "panorama edl name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override.#text",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.at.#text",
                    "data_type": "string",
                    "example_values": [
                        "07"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.at.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.at.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.at.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.day-of-month.#text",
                    "data_type": "string",
                    "example_values": [
                        "12"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.day-of-month.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.day-of-month.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.day-of-month.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.url.#text",
                    "data_type": "string",
                    "example_values": [
                        "http://www.test.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.url.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.url.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "59"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.url.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:16:57"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_external_dynamic_lists",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total external dynamic lists: 1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "List EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get edl",
            "identifier": "get_edl",
            "description": "Get data of an External Dynamic List",
            "read_only": true,
            "type": "investigate",
            "parameters": {
                "name": {
                    "description": "Name of the external dynamic list you want to get data off (up to 63 characters)",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama edl name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which the edl exists (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ],
                    "contains": [
                        "panorama device group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "example_values": [
                        "edl_name"
                    ],
                    "contains": [
                        "panorama edl name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@loc",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "test edl 1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.certificate-profile",
                    "data_type": "string",
                    "example_values": [
                        "test123"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.description",
                    "data_type": "string",
                    "example_values": [
                        "This is test edl description"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.at",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.recurring.monthly.day-of-month",
                    "data_type": "string",
                    "example_values": [
                        "22"
                    ]
                },
                {
                    "data_path": "action_result.data.*.type.ip.url",
                    "data_type": "string",
                    "example_values": [
                        "www.test.com"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully fetched EDL details"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "json",
                "title": "Get EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create edl",
            "identifier": "create_edl",
            "description": "Create an External Dynamic List",
            "verbose": "<h4>Action Keynote</h4><ul><li>If the <b>device_group</b> doesn't exist, it will create a new <b>device_group</b>.</li><li>The certificate profile you select must have root CA (certificate authority) and intermediate CA certificates that match the certificates installed on the server you are authenticating.</li><li>The default value for <b>hour</b> is '0'.</li><li>The default value for <b>day_of_week</b> is 'Sunday'.</li><li>Exception list is used to exclude entries from an external dynamic list and gives you the option to enforce policy on some (but not all) of the entries in a list. exception list have an IP address, domain, or URL(depending on the type of list).</li><li>Exception list can have at max 100 exception values.</li><li>If the list type is <b>Subscriber Identity List(IMSI)</b>, in the exception list IMSI prefix can have 6 digit values followed by '*'.<ul><li><code>Example : '123456*'</code>.</li></ul></li><li>If the list type is <b>Equipment Identity List(IMEI)</b>, in the exception list IMSI prefix can have 8 digit values followed by '*'.<ul><li><code>Example : '12345678*'</code>.</li></ul></li></ul>",
            "read_only": false,
            "type": "contain",
            "undo": "delete edl",
            "parameters": {
                "name": {
                    "description": "Name of the external dynamic list you want to create (up to 63 characters)",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama edl name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which you want to create the edl (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "description": {
                    "description": "Description of external dynamic list (max char : 255)",
                    "data_type": "string",
                    "order": 2
                },
                "list_type": {
                    "description": "Type of external dynamic list",
                    "data_type": "string",
                    "value_list": [
                        "Predefined IP List",
                        "Predefined URL List",
                        "IP List",
                        "Domain List",
                        "URL List",
                        "Subscriber Identity List",
                        "Equipment Identity List"
                    ],
                    "default": "IP List",
                    "required": true,
                    "order": 3
                },
                "source": {
                    "description": "Source url to fetch the data",
                    "data_type": "string",
                    "order": 4,
                    "required": true
                },
                "exception_list": {
                    "description": "List of exceptions (comma separated values)",
                    "data_type": "string",
                    "order": 5
                },
                "expand_for_subdomains": {
                    "description": "Expand to include subdomains of a specified domain automatically (only used when list_type is Domain list)",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "default": "No",
                    "order": 6
                },
                "disable_override": {
                    "description": "Used to ensure that a firewall administrator cannot override settings locally on a firewall that inherits this configuration through a Device Group commit from Panorama (only used when device group is not 'shared')",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "default": "No",
                    "order": 7
                },
                "certificate_profile": {
                    "description": "Certificate profile is used for authenticating the server that hosts the list (only used when list_type is not predefined IP or URL)",
                    "data_type": "string",
                    "order": 8
                },
                "check_for_updates": {
                    "description": "Defines the frequency at which the firewall retrieves the list  (only used when list_type is not predefined IP or URL)",
                    "data_type": "string",
                    "value_list": [
                        "Five-minute",
                        "Hourly",
                        "Daily",
                        "Weekly",
                        "Monthly"
                    ],
                    "default": "Five-minute",
                    "order": 9
                },
                "hour": {
                    "description": "At what hour of the day to check for updates  (only used when check_for_update type is daily, weekly or monthly)",
                    "data_type": "string",
                    "default": "0",
                    "order": 10
                },
                "day_of_week": {
                    "description": "On which specific day of week to check for updates (only used when check_for_update type is weekly)",
                    "data_type": "string",
                    "value_list": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ],
                    "default": "Sunday",
                    "order": 11
                },
                "day_of_month": {
                    "description": "On which specific date of month to check for updates (only used when check_for_update type is monthly)",
                    "data_type": "string",
                    "order": 12
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 13
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 14
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 15
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.certificate_profile",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.parameter.check_for_updates",
                    "data_type": "string",
                    "example_values": [
                        "Hourly"
                    ]
                },
                {
                    "data_path": "action_result.parameter.day_of_month",
                    "data_type": "string",
                    "example_values": [
                        "22"
                    ]
                },
                {
                    "data_path": "action_result.parameter.day_of_week",
                    "data_type": "string",
                    "example_values": [
                        "Sunday"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string",
                    "example_values": [
                        "Test description for edl"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "example_values": [
                        "dg5"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1,
                    "contains": [
                        "panorama device group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.disable_override",
                    "data_type": "string",
                    "example_values": [
                        "Yes",
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.parameter.exception_list",
                    "data_type": "string",
                    "example_values": [
                        "test1.com, test2.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.expand_for_subdomains",
                    "data_type": "string",
                    "example_values": [
                        "Yes",
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.parameter.hour",
                    "data_type": "string",
                    "example_values": [
                        "12"
                    ]
                },
                {
                    "data_path": "action_result.parameter.list_type",
                    "data_type": "string",
                    "example_values": [
                        "IP List"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "example_values": [
                        "edl_name"
                    ],
                    "column_name": "EDL Name",
                    "column_order": 0,
                    "contains": [
                        "panorama edl name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.source",
                    "data_type": "string",
                    "example_values": [
                        "http://test.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.@count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "3639"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:14:30"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:14:30"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:14:56"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "3650"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:15:00"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:15:00"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:15:00"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.create_edl.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_edl.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_edl.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Create EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "modify edl",
            "identifier": "modify_edl",
            "description": "Modify an External Dynamic List",
            "verbose": "<h4>Action Keynote</h4><ul><li>This action is used to modify the existing edl data. The parameters for which data is provided will only be updated.</li><li>The certificate profile you select must have root CA (certificate authority) and intermediate CA certificates that match the certificates installed on the server you are authenticating.</li><li>Exception list is used to exclude entries from an external dynamic list and gives you the option to enforce policy on some (but not all) of the entries in a list. exception list have an IP address, domain, or URL(depending on the type of list). </li><li>Exception list can have at max 100 exception values.</li><li>If the list type is <b>Subscriber Identity List(IMSI)</b>, in the exception list IMSI prefix can have 6 digit values followed by '*'.<ul><li><code>Example : '123456*'</code>.</li></ul></li><li>If the list type is <b>Equipment Identity List(IMEI)</b>, in the exception list IMSI prefix can have 8 digit values followed by '*'.<ul><li><code>Example : '12345678*'</code>.</li></ul></li></ul>",
            "read_only": false,
            "type": "generic",
            "parameters": {
                "name": {
                    "description": "Name of the external dynamic list you want to modify (up to 63 characters)",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama edl name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which the edl exists (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "description": {
                    "description": "Description of external dynamic list (max char : 255)",
                    "data_type": "string",
                    "order": 2
                },
                "list_type": {
                    "description": "Type of external dynamic list",
                    "data_type": "string",
                    "value_list": [
                        "Predefined IP List",
                        "Predefined URL List",
                        "IP List",
                        "Domain List",
                        "URL List",
                        "Subscriber Identity List",
                        "Equipment Identity List"
                    ],
                    "order": 3
                },
                "source": {
                    "description": "Source url to fetch the data",
                    "data_type": "string",
                    "order": 4
                },
                "exception_list": {
                    "description": "List of exceptions (comma separated values)",
                    "data_type": "string",
                    "order": 5
                },
                "expand_for_subdomains": {
                    "description": "Expand to include subdomains of a specified domain automatically (only used when list_type is Domain list)",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 6
                },
                "disable_override": {
                    "description": "Used to ensure that a firewall administrator cannot override settings locally on a firewall that inherits this configuration through a Device Group commit from Panorama (only used when device group is not 'shared')",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 7
                },
                "certificate_profile": {
                    "description": "Certificate profile is used for authenticating the server that hosts the list (only used when list_type is not predefined IP or URL)",
                    "data_type": "string",
                    "order": 8
                },
                "check_for_updates": {
                    "description": "Defines the frequency at which the firewall retrieves the list  (only used when list_type is not predefined IP or URL)",
                    "data_type": "string",
                    "value_list": [
                        "Five-minute",
                        "Hourly",
                        "Daily",
                        "Weekly",
                        "Monthly"
                    ],
                    "order": 9
                },
                "hour": {
                    "description": "At what hour of the day to check for updates (only used when check_for_update type is daily, weekly or monthly)",
                    "data_type": "string",
                    "order": 10
                },
                "day_of_week": {
                    "description": "On which specific day of week to check for updates (only used when check_for_update type is weekly)",
                    "data_type": "string",
                    "value_list": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ],
                    "order": 11
                },
                "day_of_month": {
                    "description": "On which specific date of month to check for updates (only used when check_for_update type is monthly)",
                    "data_type": "string",
                    "order": 12
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 13
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 14
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 15
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.certificate_profile",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.parameter.check_for_updates",
                    "data_type": "string",
                    "example_values": [
                        "Hourly"
                    ]
                },
                {
                    "data_path": "action_result.parameter.day_of_month",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.day_of_week",
                    "data_type": "string",
                    "example_values": [
                        "Sunday"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string",
                    "example_values": [
                        "Test description for edl"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "example_values": [
                        "test_device_grp"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1,
                    "contains": [
                        "panorama device group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.disable_override",
                    "data_type": "string",
                    "example_values": [
                        "Yes",
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.parameter.exception_list",
                    "data_type": "string",
                    "example_values": [
                        "test.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.expand_for_subdomains",
                    "data_type": "string",
                    "example_values": [
                        "Yes",
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.parameter.hour",
                    "data_type": "string",
                    "example_values": [
                        "10"
                    ]
                },
                {
                    "data_path": "action_result.parameter.list_type",
                    "data_type": "string",
                    "example_values": [
                        "IP List"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "example_values": [
                        "edl_name"
                    ],
                    "column_name": "EDL Name",
                    "column_order": 0,
                    "contains": [
                        "panorama edl name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.source",
                    "data_type": "string",
                    "example_values": [
                        "http://test.com"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "3879"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "02:47:03"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/17 02:47:03"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/17 02:47:30"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "3890"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "02:47:33"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/17 02:47:33"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/17 02:47:33"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.modify_edl.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.modify_edl.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.modify_edl.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Modify EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete edl",
            "identifier": "delete_edl",
            "description": "Delete an External Dynamic List",
            "read_only": false,
            "type": "correct",
            "parameters": {
                "name": {
                    "description": "Name of the external dynamic list you want to delete (up to 63 characters)",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama edl name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which the edl exists (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 2
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "example_values": [
                        "device_group"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1,
                    "contains": [
                        "panorama device group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "example_values": [
                        "edl_name"
                    ],
                    "column_name": "EDL Name",
                    "column_order": 0,
                    "primary": true,
                    "contains": [
                        "panorama edl name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "3651"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:19:54"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:19:54"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:20:20"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "3662"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:20:21"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:20:21"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/15 03:20:21"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.delete_edl.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_edl.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_edl.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Delete EDL"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create policy",
            "identifier": "create_policy",
            "verbose": "<p><h4>Action Keynote</h4><ul><li>For source and destination address parameters, to add a region, provide only the abbreviation of region. That is for region US (United States) enter US as input.</li><li>When rule_type parameter is 'interzone' the destination zone parameter will be ignored.</li></ul></p>",
            "description": "Create a security policy rule",
            "type": "contain",
            "read_only": false,
            "undo": "delete policy",
            "parameters": {
                "policy_name": {
                    "description": "Name of the security policy rule (max length is 63 characters, which can be letters, numbers, spaces, hyphens, dot and underscores)",
                    "data_type": "string",
                    "primary": true,
                    "required": true,
                    "order": 0,
                    "contains": [
                        "panorama policy name"
                    ]
                },
                "device_group": {
                    "description": "Device group to create the policy rule in (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "primary": true,
                    "required": true,
                    "order": 1,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "policy_type": {
                    "description": "Rule base to create the policy in (pre-rule or post-rule)",
                    "data_type": "string",
                    "required": true,
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 2
                },
                "rule_type": {
                    "description": "Rule type of the policy rule (specifies whether the rule applies to traffic within a zone, between zones, or both)",
                    "data_type": "string",
                    "value_list": [
                        "universal",
                        "intrazone",
                        "interzone"
                    ],
                    "default": "universal",
                    "required": true,
                    "order": 3
                },
                "description": {
                    "description": "Description for the policy (max length 1024 characters)",
                    "data_type": "string",
                    "order": 4
                },
                "tag": {
                    "description": "List of tags(comma separated) to apply to this policy (allow to group objects using keywords or phrases, max length 127 characters)",
                    "data_type": "string",
                    "order": 5
                },
                "audit_comment": {
                    "description": "Describe the changes made and why the rule was created by adding an audit comment(once the configuration is commited, it would be reflected in Audit Comment Archive for future reference)",
                    "data_type": "string",
                    "order": 6,
                    "name,": "Audit Comment"
                },
                "source_zone": {
                    "description": "Source zones for policy (default is Any)",
                    "data_type": "string",
                    "required": true,
                    "default": "any",
                    "order": 7
                },
                "source_address": {
                    "description": "List of source addresses, address groups, or regions (comma separated, default is Any) to be added to the policy",
                    "data_type": "string",
                    "required": true,
                    "order": 8,
                    "default": "any"
                },
                "negate_source": {
                    "description": "Whether to negate the source (apply the rule to source addresses from the specified zone except for the addresses specified)",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 9
                },
                "source_user": {
                    "description": "List of source users or groups of users (comma separated) subject to the policy",
                    "data_type": "string",
                    "order": 10
                },
                "source_device": {
                    "description": "List of host devices(comma separated) subject to the policy",
                    "data_type": "string",
                    "order": 11,
                    "default": "any",
                    "name,": "Source Device"
                },
                "destination_zone": {
                    "description": "Destinations zones(comma separated) for policy (default is Any)",
                    "data_type": "string",
                    "required": true,
                    "default": "any",
                    "order": 12
                },
                "destination_device": {
                    "description": "List of host devices(comma separated) subject to the policy",
                    "data_type": "string",
                    "order": 13,
                    "default": "any",
                    "name,": "Destination Device"
                },
                "destination_address": {
                    "description": "List of destination addresses, address groups, or regions (comma separated, default is Any) to be added to the policy",
                    "data_type": "string",
                    "required": true,
                    "order": 14,
                    "default": "any"
                },
                "negate_destination": {
                    "description": "Whether to negate the destination (apply the rule to destination addresses from the specified zone except for the addresses specified)",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 15
                },
                "application": {
                    "description": "List of specific applications(comma separated) for the security policy rule",
                    "data_type": "string",
                    "required": true,
                    "default": "any",
                    "order": 16
                },
                "service": {
                    "description": "List of services(comma separated) of the policy (services to limit to specific TCP or UDP port numbers)",
                    "data_type": "string",
                    "required": true,
                    "default": "any",
                    "order": 17
                },
                "category": {
                    "description": "List of URL Categories(comma separated) of the policy",
                    "data_type": "string",
                    "order": 18
                },
                "profile_setting": {
                    "description": "Type of profile setting to choose for the policy (additional checking that the firewall performs on packets that match the Security profile rule)",
                    "data_type": "string",
                    "value_list": [
                        "profiles",
                        "group"
                    ],
                    "order": 19
                },
                "action": {
                    "description": "Action the firewall takes on traffic that matches the attributes defined in a rule",
                    "data_type": "string",
                    "required": true,
                    "default": "allow",
                    "value_list": [
                        "allow",
                        "deny",
                        "drop",
                        "reset client",
                        "reset server",
                        "reset both client and server"
                    ],
                    "order": 20
                },
                "icmp_unreachable": {
                    "description": "Whether to send information to the client that a session is not allowed. Applicable only in case action is 'Drop', 'Reset Client', 'Reset Server', 'Reset Both'",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 21
                },
                "log_forwarding": {
                    "description": "To forward the local traffic log and threat log entries to remote destinations, such as Panorama",
                    "data_type": "string",
                    "order": 22
                },
                "target": {
                    "description": "Apply the rule to specific firewalls or descendant device groups of the Device Group (or Shared location) where the rule is defined (Takes serial number of firewall as input)",
                    "data_type": "string",
                    "order": 23,
                    "name,": "Target"
                },
                "where": {
                    "description": "Where to position the policy, by default the policy would be created at the bottom",
                    "data_type": "string",
                    "value_list": [
                        "before",
                        "after",
                        "top",
                        "bottom"
                    ],
                    "order": 24
                },
                "dst": {
                    "description": "Policy in reference to which, position the current policy (only applicable when input for 'where' is 'after' or 'before')",
                    "data_type": "string",
                    "order": 25
                },
                "disable": {
                    "description": "Whether to disable the policy",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 26
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 27
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 28
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 29
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string",
                    "example_values": [
                        "1c-enterprise"
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string",
                    "example_values": [
                        "updated description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.category",
                    "data_type": "string",
                    "example_values": [
                        "Test URL Category"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string",
                    "example_values": [
                        "Policy rule to deny traffic from a specific address group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_address",
                    "data_type": "string",
                    "example_values": [
                        "dev_env_address_1",
                        "10.1.192.168"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_device",
                    "data_type": "string",
                    "example_values": [
                        "test_device"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_zone",
                    "data_type": "string",
                    "example_values": [
                        "IN"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "shared"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.disable",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.dst",
                    "data_type": "string",
                    "example_values": [
                        "test_policy_rule_1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.icmp_unreachable",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.log_forwarding",
                    "data_type": "string",
                    "example_values": [
                        "IoT Security Default Profile"
                    ]
                },
                {
                    "data_path": "action_result.parameter.negate_destination",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.negate_source",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "column_name": "Policy Name",
                    "column_order": 0,
                    "contains": [
                        "panorama policy name"
                    ],
                    "example_values": [
                        "policy_rule_1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.profile_setting",
                    "data_type": "string",
                    "example_values": [
                        "profiles"
                    ]
                },
                {
                    "data_path": "action_result.parameter.rule_type",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.parameter.service",
                    "data_type": "string",
                    "example_values": [
                        "service-http"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_address",
                    "data_type": "string",
                    "example_values": [
                        "dev_env_address_1",
                        "10.1.192.168"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_device",
                    "data_type": "string",
                    "example_values": [
                        "test_device"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_user",
                    "data_type": "string",
                    "example_values": [
                        "test_user"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_zone",
                    "data_type": "string",
                    "example_values": [
                        "IN"
                    ]
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.parameter.target",
                    "data_type": "string",
                    "example_values": [
                        "000000000000000"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.where",
                    "data_type": "string",
                    "example_values": [
                        "after"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "432"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "04:54:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/25 04:54:34"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/25 04:54:58"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "169"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "test_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "External Dynamic List test_edl_test_ip_list is configured with no certificate profile. Please select a certificate profile for performing server certificate validation"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 03:15:29"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "03:14:54"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "443"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "04:55:01"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/25 04:55:01"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/25 04:55:01"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.create a policy rule.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.create a policy rule.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.create a policy rule.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "7"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_audit_comment.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.update_audit_comment.response.result",
                    "data_type": "string",
                    "example_values": [
                        "Successfully added comment for xpath"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Create Policy",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "custom block policy",
            "identifier": "custom_block_policy",
            "description": "Block IP addresses, Address Groups, EDLs(External Dynamic List), Applications, or URL Categories in Panorama and creates a custom uni-directional (direction parameter value as from or to) or bi-directional (direction parameter value as both) security rule",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the security policy rule (max length is 63 characters, which can be letters, numbers, spaces, hyphens, dot and underscores)",
                    "data_type": "string",
                    "primary": true,
                    "required": true,
                    "order": 0,
                    "contains": [
                        "panorama policy name"
                    ]
                },
                "device_group": {
                    "description": "Device group to create the policy rule in (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "primary": true,
                    "required": true,
                    "order": 1,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "policy_type": {
                    "description": "Rule base to create the policy in (pre-rule or post-rule)",
                    "data_type": "string",
                    "required": true,
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 2
                },
                "rule_type": {
                    "description": "Rule type of the policy rule (specifies whether the rule applies to traffic within a zone, between zones, or both)",
                    "data_type": "string",
                    "value_list": [
                        "universal",
                        "intrazone",
                        "interzone"
                    ],
                    "default": "universal",
                    "required": true,
                    "order": 3
                },
                "description": {
                    "description": "Description for the policy (max length 1024 characters)",
                    "data_type": "string",
                    "order": 4
                },
                "tag": {
                    "description": "List of tags to apply to this policy (allow to group objects using keywords or phrases, max length 127 characters)",
                    "data_type": "string",
                    "order": 5,
                    "allow_list": true
                },
                "audit_comment": {
                    "description": "Describe the changes made and why the rule was created by adding an audit comment(once the configuration is commited, it would be reflected in Audit Comment Archive for future reference)",
                    "data_type": "string",
                    "order": 6,
                    "name,": "audit comment"
                },
                "direction": {
                    "description": "Direction to block the traffic (Default is 'both')",
                    "data_type": "string",
                    "value_list": [
                        "from",
                        "to",
                        "both"
                    ],
                    "order": 7
                },
                "object_type": {
                    "description": "Type of object to block",
                    "data_type": "string",
                    "required": true,
                    "value_list": [
                        "ip",
                        "address-group",
                        "edl",
                        "url-category",
                        "application"
                    ],
                    "order": 8
                },
                "object_value": {
                    "description": "Value of the object to be blocked. Can be a list(comma separated)",
                    "data_type": "string",
                    "required": true,
                    "order": 9
                },
                "icmp_unreachable": {
                    "description": "Whether to send information to the client that a session is not allowed. Applicable only in case action is 'Drop', 'Reset Client', 'Reset Server', 'Reset Both'",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 10
                },
                "log_forwarding": {
                    "description": "To forward the local traffic log and threat log entries to remote destinations, such as Panorama",
                    "data_type": "string",
                    "order": 11,
                    "allow_list": true
                },
                "where": {
                    "description": "Where to position the policy, by default the policy would be created at the bottom",
                    "data_type": "string",
                    "value_list": [
                        "before",
                        "after",
                        "top",
                        "bottom"
                    ],
                    "order": 12
                },
                "dst": {
                    "description": "Policy in reference to which, position the current policy",
                    "data_type": "string",
                    "order": 13
                },
                "target": {
                    "description": "Apply the rule to specific firewalls or descendant device groups of the Device Group (or Shared location) where the rule is defined (Takes serial number of firewall as input)",
                    "data_type": "string",
                    "order": 14,
                    "name,": "Target"
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 15
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 16
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 17
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string",
                    "example_values": [
                        "updated description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string",
                    "example_values": [
                        "Test description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "shared"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.direction",
                    "data_type": "string",
                    "example_values": [
                        "both"
                    ]
                },
                {
                    "data_path": "action_result.parameter.dst",
                    "data_type": "string",
                    "example_values": [
                        "test_policy_rule_1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.icmp_unreachable",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.log_forwarding",
                    "data_type": "string",
                    "example_values": [
                        "IoT Security Default Profile"
                    ]
                },
                {
                    "data_path": "action_result.parameter.object_type",
                    "data_type": "string",
                    "example_values": [
                        "ip"
                    ]
                },
                {
                    "data_path": "action_result.parameter.object_value",
                    "data_type": "string",
                    "example_values": [
                        "test_address_2",
                        "10.1.10.20"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "column_name": "Policy Name",
                    "column_order": 0,
                    "contains": [
                        "panorama policy name"
                    ],
                    "example_values": [
                        "policy_rule_1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.rule_type",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.parameter.target",
                    "data_type": "string",
                    "example_values": [
                        "000000000000000"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.where",
                    "data_type": "string",
                    "example_values": [
                        "after"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "7"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Custom Block Policy",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "modify policy",
            "identifier": "modify_policy",
            "description": "Modify a security policy rule",
            "verbose": "<p><h4>Action Keynote</h4><ul><li>When rule_type parameter is 'interzone' the destination zone parameter will be ignored.</li><li>The <b>device_group</b> and <b>policy_name</b> parameters cannot be modified.</li><li>For source and destination address parameters, to add a region, provide only the abbreviation of region. That is for region US (United States) enter US as input.</li><li>Source address, source zone, source user, source device, destination address, destination zone, destination device, tag, application, service, category, target parameters would append the values to the already existing values in th policy.</li><li>Log forwarding, profile settings, rule type parameters would be replaced.</li></ul></p>",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the security policy rule",
                    "data_type": "string",
                    "primary": true,
                    "required": true,
                    "order": 0,
                    "contains": [
                        "panorama policy name"
                    ]
                },
                "device_group": {
                    "description": "Device group of the policy rule (default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "primary": true,
                    "required": true,
                    "order": 1,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "policy_type": {
                    "description": "Rule base of the policy (pre-rule or post-rule)",
                    "data_type": "string",
                    "required": true,
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 2
                },
                "rule_type": {
                    "description": "Rule type of the policy rule (specifies whether the rule applies to traffic within a zone, between zones, or both)",
                    "data_type": "string",
                    "value_list": [
                        "universal",
                        "intrazone",
                        "interzone"
                    ],
                    "order": 3
                },
                "description": {
                    "description": "Description for the policy (max length 1024 characters)",
                    "data_type": "string",
                    "order": 4
                },
                "tag": {
                    "description": "List of tags(comma separated) to apply to this policy (allow to group objects using keywords or phrases, max length 127 characters)",
                    "data_type": "string",
                    "order": 5
                },
                "audit_comment": {
                    "description": "Describe the changes made and why the rule was created by adding an audit comment(once the configuration is commited, it would be reflected in Audit Comment Archive for future reference)",
                    "data_type": "string",
                    "order": 6,
                    "name,": "Audit Comment"
                },
                "source_zone": {
                    "description": "List of source zones(comma separated) for policy (default is Any)",
                    "data_type": "string",
                    "order": 7
                },
                "source_address": {
                    "description": "List of source addresses, address groups, or regions (comma separated, default is Any) to be added to the policy",
                    "data_type": "string",
                    "order": 8
                },
                "negate_source": {
                    "description": "Whether to negate the source (apply the rule to source addresses from the specified zone except for the addresses specified)",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 9
                },
                "source_user": {
                    "description": "List of source users or groups of users(comma separated) subject to the policy",
                    "data_type": "string",
                    "order": 10
                },
                "source_device": {
                    "description": "The host devices(comma separated) subject to the policy",
                    "data_type": "string",
                    "order": 11,
                    "name,": "Source Device"
                },
                "destination_zone": {
                    "description": "List of destinations zones(comma separated) for policy (default is Any)",
                    "data_type": "string",
                    "order": 12
                },
                "destination_device": {
                    "description": "List of host devices(comma separated) subject to the policy",
                    "data_type": "string",
                    "order": 13,
                    "name,": "Destination Device"
                },
                "destination_address": {
                    "description": "List of destination addresses, address groups, or regions (default is Any) to be added to the policy",
                    "data_type": "string",
                    "order": 14
                },
                "negate_destination": {
                    "description": "Whether to negate the destination (apply the rule to destination addresses from the specified zone except for the addresses specified)",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 15
                },
                "application": {
                    "description": "List of specific applications(comma separated) for the Security policy rule",
                    "data_type": "string",
                    "order": 16
                },
                "service": {
                    "description": "List of services of the policy (comma separated, services to limit to specific TCP or UDP port numbers)",
                    "data_type": "string",
                    "order": 17
                },
                "category": {
                    "description": "List of URL Categories(comma separated) of the policy",
                    "data_type": "string",
                    "order": 18
                },
                "profile_setting": {
                    "description": "Type of profile setting to choose for the policy (additional checking that the firewall performs on packets that match the Security profile rule)",
                    "data_type": "string",
                    "value_list": [
                        "profiles",
                        "group"
                    ],
                    "order": 19
                },
                "action": {
                    "description": "Action the firewall takes on traffic that matches the attributes defined in a rule",
                    "data_type": "string",
                    "value_list": [
                        "allow",
                        "deny",
                        "drop",
                        "reset client",
                        "reset server",
                        "reset both client and server"
                    ],
                    "order": 20
                },
                "icmp_unreachable": {
                    "description": "Whether to send sent information to the client that a session is not allowed. Applicable only in case action is 'Drop', 'Reset Client', 'Reset Server', 'Reset Both'",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 21
                },
                "log_forwarding": {
                    "description": "To forward the local traffic log and threat log entries to remote destinations, such as Panorama",
                    "data_type": "string",
                    "order": 22
                },
                "target": {
                    "description": "Apply the rule to specific firewalls or descendant device groups of the Device Group (or Shared location) where the rule is defined (Takes serial number of firewall as input)",
                    "data_type": "string",
                    "order": 23,
                    "name,": "Target"
                },
                "disable": {
                    "description": "Whether to disable the policy",
                    "data_type": "string",
                    "order": 24,
                    "value_list": [
                        "Yes",
                        "No"
                    ]
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 25
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 26
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 27
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.parameter.application",
                    "data_type": "string",
                    "example_values": [
                        "1c-enterprise"
                    ]
                },
                {
                    "data_path": "action_result.parameter.audit_comment",
                    "data_type": "string",
                    "example_values": [
                        "updated source address"
                    ]
                },
                {
                    "data_path": "action_result.parameter.category",
                    "data_type": "string",
                    "example_values": [
                        "Test URL Category"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string",
                    "example_values": [
                        "Policy rule to deny traffic from a specific address group"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_address",
                    "data_type": "string",
                    "example_values": [
                        "dev_env_address_1",
                        "10.1.192.168"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_device",
                    "data_type": "string",
                    "example_values": [
                        "test_device"
                    ]
                },
                {
                    "data_path": "action_result.parameter.destination_zone",
                    "data_type": "string",
                    "example_values": [
                        "IN"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1,
                    "example_values": [
                        "shared"
                    ]
                },
                {
                    "data_path": "action_result.parameter.disable",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.icmp_unreachable",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.log_forwarding",
                    "data_type": "string",
                    "example_values": [
                        "IoT Security Default Profile"
                    ]
                },
                {
                    "data_path": "action_result.parameter.negate_destination",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.negate_source",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "column_name": "Policy Name",
                    "column_order": 0,
                    "contains": [
                        "panorama policy name"
                    ],
                    "example_values": [
                        "policy_rule_1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.profile_setting",
                    "data_type": "string",
                    "example_values": [
                        "profiles"
                    ]
                },
                {
                    "data_path": "action_result.parameter.rule_type",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.parameter.service",
                    "data_type": "string",
                    "example_values": [
                        "service-http"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_address",
                    "data_type": "string",
                    "example_values": [
                        "dev_env_address_1",
                        "10.1.192.168"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_device",
                    "data_type": "string",
                    "example_values": [
                        "test_device"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_user",
                    "data_type": "string",
                    "example_values": [
                        "test_user"
                    ]
                },
                {
                    "data_path": "action_result.parameter.source_zone",
                    "data_type": "string",
                    "example_values": [
                        "IN"
                    ]
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string",
                    "example_values": [
                        "test_tag"
                    ]
                },
                {
                    "data_path": "action_result.parameter.target",
                    "data_type": "string",
                    "example_values": [
                        "000000000000000"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.@count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@loc",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_dg_child"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@name",
                    "data_type": "string",
                    "example_values": [
                        "test_rule_23"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@uuid",
                    "data_type": "string",
                    "example_values": [
                        "3fcfee47-4425-4c3a-8cb9-cb37ae4ee096"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.action.#text",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.action.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.action.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.action.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.application.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.application.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.application.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.application.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.application.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.application.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.application.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.application.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "Case Sensitive Description. THIS is Case sensitive"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.destination.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.from.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.from.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.from.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.from.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.from.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.from.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.from.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.from.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.rule-type",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.rule-type.#text",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.rule-type.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.rule-type.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.rule-type.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "service-http"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "200"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 07:16:26"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.service.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-user.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-user.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "403"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-user.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 09:47:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-user.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_user_group_parent"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-user.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-user.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "403"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source-user.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 09:47:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_address1_default"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "303"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 08:52:12"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.source.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_zone1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "403"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 09:47:07"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.to.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@loc",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_dg_child"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@name",
                    "data_type": "string",
                    "example_values": [
                        "test_rule_23"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@uuid",
                    "data_type": "string",
                    "example_values": [
                        "3fcfee47-4425-4c3a-8cb9-cb37ae4ee096"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.#text",
                    "data_type": "string",
                    "example_values": [
                        "allow"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.action.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.application.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "Case Sensitive Description. THIS is Case sensitive"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.destination.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.from.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.#text",
                    "data_type": "string",
                    "example_values": [
                        "universal"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.rule-type.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "service-http"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "200"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 07:16:26"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.service.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-hip.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "403"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 09:47:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_user_group_parent"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "403"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source-user.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 09:47:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_address1_default"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "303"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 08:52:12"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.source.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "any"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_zone1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "403"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 09:47:07"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "153"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.to.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/25 06:56:08"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Modify Policy",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "move policy",
            "identifier": "move_policy",
            "verbose": "<p><h4>Action Keynote</h4><ul><li>If input for either 'dst_device_group' or 'dst_policy_type' is not given, the current device_group and current policy_type would be taken as their respective values.</li></ul></p>",
            "description": "Move a security policy rule",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the security policy rule (multiple policy names can be added in policy_name when they have to moved from one policy_type or device group to another(comma separated). Whereas, for changing their respective position internally in the same device group and policy_type, only one rule can be moved at a time.)",
                    "data_type": "string",
                    "primary": true,
                    "required": true,
                    "order": 0,
                    "contains": [
                        "panorama policy name"
                    ]
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 1
                },
                "device_group": {
                    "description": "Device group of the policy rule (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "primary": true,
                    "required": true,
                    "order": 2,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "policy_type": {
                    "description": "Rule base of the policy (pre-rule or post-rule)",
                    "data_type": "string",
                    "required": true,
                    "default": "pre-rulebase",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 3
                },
                "dst_device_group": {
                    "description": "Device group to move the policy rule to (up to 31 characters)",
                    "data_type": "string",
                    "order": 4,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "dst_policy_type": {
                    "description": "Rule base to move the policy to (pre-rule or post-rule)",
                    "data_type": "string",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 5
                },
                "where": {
                    "description": "Where to position the policy, by default the policy would be created at the bottom",
                    "data_type": "string",
                    "value_list": [
                        "before",
                        "after",
                        "top",
                        "bottom"
                    ],
                    "order": 6
                },
                "dst": {
                    "description": "Policy in reference to which, position the current policy (inter dependent with 'where' parameter, when the value of where is 'before' or 'after', else it would be ignored)",
                    "data_type": "string",
                    "order": 7
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 8
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 9
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "shared"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.dst",
                    "data_type": "string",
                    "example_values": [
                        "test_policy_rule_1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.dst_device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "shared"
                    ],
                    "column_name": "Destination Device Group",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.dst_policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "contains": [
                        "panorama policy name"
                    ],
                    "example_values": [
                        "policy_rule_1",
                        "policy_rule_1,policy_rule_2"
                    ],
                    "column_name": "Policy Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.where",
                    "data_type": "string",
                    "example_values": [
                        "after"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@from",
                    "data_type": "string",
                    "example_values": [
                        "/config/devices/entry[@name='localhost.localdomain']/device-group/entry[@name='test_device_group_1_down']/pre-rulebase/security/rules"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@to",
                    "data_type": "string",
                    "example_values": [
                        "/config/shared/pre-rulebase/security/rules"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.member",
                    "data_type": "string",
                    "example_values": [
                        "test_block_rule"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "227"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "22:13:51"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:13:51"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:14:19"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "239"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "test_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "{ \"uuid\" : \"e4ced49a-58db-40f5-aa5d-400bc1579da8\", \"serial\" : \"007951000393837\", \"rulename\" : \"test_rule_1\", \"ruletype\" : \"security\", \"vsys\" : [{ \"id\" : \"vsys1\", \"dgid\" : 43, \"shadowed-rule\" : [ \"Social Media Block\", \"test\"]}]}"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "e4ced49a-58db-40f5-aa5d-400bc1579da8"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:14:29"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "22:14:22"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "238"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "22:14:22"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:14:22"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:14:22"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.@from",
                    "data_type": "string",
                    "example_values": [
                        "/config/shared/pre-rulebase/security/rules"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.@to",
                    "data_type": "string",
                    "example_values": [
                        "/config/devices/entry[@name='localhost.localdomain']/device-group/entry[@name='test_device_group_1_down']/pre-rulebase/security/rules"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.member",
                    "data_type": "string",
                    "example_values": [
                        "test_block_rule"
                    ]
                },
                {
                    "data_path": "action_result.summary.move policy rule.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully moved policy"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Move Policy",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete policy",
            "description": "Delete a security policy rule",
            "type": "correct",
            "identifier": "delete_policy",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the policy rule to delete",
                    "data_type": "string",
                    "primary": true,
                    "required": true,
                    "order": 0,
                    "contains": [
                        "panorama policy name"
                    ]
                },
                "policy_type": {
                    "description": "Rule base to delete the policy from (pre-rule or post-rule)",
                    "data_type": "string",
                    "value_list": [
                        "pre-rulebase",
                        "post-rulebase"
                    ],
                    "order": 1,
                    "required": true
                },
                "device_group": {
                    "description": "Device group of the policy rule (default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "primary": true,
                    "required": true,
                    "order": 2,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 3
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 4
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 5
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 1,
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "shared"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "column_name": "Policy Name",
                    "column_order": 0,
                    "contains": [
                        "panorama policy name"
                    ],
                    "example_values": [
                        "policy_rule_1"
                    ]
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "pre-rulebase"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "640"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:31:30"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/29 03:31:30"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/29 03:31:54"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@cmd",
                    "data_type": "string",
                    "example_values": [
                        "push-data"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dgname",
                    "data_type": "string",
                    "example_values": [
                        "test_device_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@dname",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@jobid",
                    "data_type": "string",
                    "example_values": [
                        "214"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@result",
                    "data_type": "string",
                    "example_values": [
                        "error"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.@tplname",
                    "data_type": "string",
                    "example_values": [
                        "test_template_stack"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.app-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "{ \"uuid\" : \"e4ced49a-58db-40f5-aa5d-400bc1579da8\", \"serial\" : \"007951000393837\", \"rulename\" : \"test_rule_1\", \"ruletype\" : \"security\", \"vsys\" : [{ \"id\" : \"vsys1\", \"dgid\" : 43, \"shadowed-rule\" : [ \"Social Media Block\", \"test\"]}]}"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.shadow-warn.entry.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "e4ced49a-58db-40f5-aa5d-400bc1579da8"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.details.msg.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "External Dynamic List test65432 is configured with no certificate profile. Please select a certificate profile for performing server certificate validation."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.devicename",
                    "data_type": "string",
                    "example_values": [
                        "PA-VM"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.multi-vsys",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.result",
                    "data_type": "string",
                    "example_values": [
                        "FAIL"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.serial-no",
                    "data_type": "string",
                    "example_values": [
                        "007951000393837"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.status",
                    "data_type": "string",
                    "example_values": [
                        "commit failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/06 22:12:56"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.tstart",
                    "data_type": "string",
                    "example_values": [
                        "22:12:50"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices.entry.vsys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "651"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:31:57"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/29 03:31:57"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/08/29 03:31:57"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Delete Policy",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create address group",
            "description": "Create an address group",
            "type": "contain",
            "identifier": "create_address_group",
            "read_only": false,
            "undo": "delete address group",
            "parameters": {
                "name": {
                    "description": "Name of the address group to be created (up to 63 characters)",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "panorama address group name"
                    ]
                },
                "device_group": {
                    "description": "Device group to create the address group in or 'shared' (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "required": true,
                    "order": 1,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "type": {
                    "description": "Type of the address group (Whether to create a static or a dynamic address group)",
                    "data_type": "string",
                    "default": "Static",
                    "value_list": [
                        "Static",
                        "Dynamic"
                    ],
                    "required": true,
                    "order": 2
                },
                "addresses_or_match_criteria": {
                    "description": "List of addresses or address_group to add in this address group, if 'type' is static then addresses or address groups to be included in address group have to added and if 'type' is dynamic then the match criteria (using 'and' or 'or' operators with different tags available in that device group, negation is not supported) to add addresses and address groups that satisfy this criteria into this newly created address group has to be added",
                    "data_type": "string",
                    "required": true,
                    "order": 3
                },
                "description": {
                    "description": "Description for the address group (max length 1023 characters)",
                    "data_type": "string",
                    "order": 4
                },
                "disable_override": {
                    "description": "Used to ensure that a firewall administrator cannot override settings locally on a firewall that inherits this configuration through a Device Group commit from Panorama (only used when device group is not 'shared')",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "default": "No",
                    "order": 5
                },
                "tag": {
                    "description": "List of tags to apply to this address group (allow to group objects using keywords or phrases, max length 127 characters)",
                    "data_type": "string",
                    "order": 6
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 7
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 8
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 9
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.addresses_or_match_criteria",
                    "data_type": "string",
                    "example_values": [
                        "address_1,address_2",
                        "'tag_1' and 'tag_2' or 'tag_3'"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string",
                    "example_values": [
                        "Test description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "shared"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.disable_override",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "contains": [
                        "panorama address group name"
                    ],
                    "example_values": [
                        "address_group_1"
                    ],
                    "column_name": "Address Group Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string",
                    "example_values": [
                        "tag_1,tag_2"
                    ]
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "example_values": [
                        "Static"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.@count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "7"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Create Address Group",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "modify address group",
            "description": "Modify an address group",
            "type": "generic",
            "identifier": "modify_address_group",
            "read_only": false,
            "parameters": {
                "name": {
                    "description": "Name of the address group to be modified",
                    "data_type": "string",
                    "required": true,
                    "order": 0,
                    "primary": true,
                    "contains": [
                        "panorama address group name"
                    ]
                },
                "device_group": {
                    "description": "Device group to which the address group to be modified belongs (default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "required": true,
                    "order": 1,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "type": {
                    "description": "Type of the address group",
                    "data_type": "string",
                    "value_list": [
                        "Static",
                        "Dynamic"
                    ],
                    "order": 2
                },
                "addresses_or_match_criteria": {
                    "description": "List of addresses or address_group to add in this address group, if 'type' is static then addresses or address groups to be included in address group have to added and if 'type' is dynamic then the match criteria (using 'and' or 'or' operators with different tags available in that device group, negation is not supported) to add addresses and address groups that satisfy this criteria into this newly created address group has to be added",
                    "data_type": "string",
                    "order": 3
                },
                "description": {
                    "description": "Description for the address group (max length 1023 characters)",
                    "data_type": "string",
                    "order": 4
                },
                "disable_override": {
                    "description": "Used to ensure that a firewall administrator cannot override settings locally on a firewall that inherits this configuration through a Device Group commit from Panorama (only used when device group is not 'shared')",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "order": 5
                },
                "tag": {
                    "description": "List of tags to apply to this address group (allow to group objects using keywords or phrases, max length 127 characters)",
                    "data_type": "string",
                    "order": 6
                },
                "ph0": {
                    "data_type": "ph",
                    "order": 7
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 8
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 9
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.addresses_or_match_criteria",
                    "data_type": "string",
                    "example_values": [
                        "address_1,address_2",
                        "'tag_1' and 'tag_2' or 'tag_3'"
                    ]
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string",
                    "example_values": [
                        "Test description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "shared"
                    ],
                    "column_name": "Device Group",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.disable_override",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "contains": [
                        "panorama address group name"
                    ],
                    "example_values": [
                        "address_group_1"
                    ],
                    "column_name": "Address Group Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string",
                    "example_values": [
                        "tag_1,tag_2"
                    ]
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "example_values": [
                        "Static"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.@count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@loc",
                    "data_type": "string",
                    "example_values": [
                        "New_Device_Group_1234"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@name",
                    "data_type": "string",
                    "example_values": [
                        "New_address_Group1234"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:06"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "This is test description for Address_group"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:06"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.static.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.static.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.static.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:07"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.static.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_address_group_shared"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.static.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.static.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.static.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:07"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:06"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "test_tag1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:05:29"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "8"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "Test_Tag_For_ADG"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.data.*.entry.tag.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:06"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "test_tag1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/04 01:05:29"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "8"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "19"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@loc",
                    "data_type": "string",
                    "example_values": [
                        "New_Device_Group_1234"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@name",
                    "data_type": "string",
                    "example_values": [
                        "New_address_Group1234"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:06"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "This is test description for Address_group"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:06"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.static.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.static.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.static.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:07"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.static.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "do_not_delete_address_group_shared"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.static.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.static.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.static.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:07"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:06"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "Test_Tag_For_ADG"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "6"
                    ]
                },
                {
                    "data_path": "action_result.summary.does_policy_exist.response.result.entry.tag.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/03 23:06:06"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Modify Address Group",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list address groups",
            "description": "List the address groups",
            "type": "investigate",
            "identifier": "list_address_groups",
            "read_only": true,
            "parameters": {
                "device_group": {
                    "description": "Device group whose address groups you want to list (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 0,
                    "contains": [
                        "panorama device group"
                    ],
                    "primary": true,
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_grp"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "test address group name"
                    ],
                    "column_name": "Address Group Name",
                    "column_order": 0,
                    "contains": [
                        "panorama address group name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 22:58:19"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.data.*.dynamic.filter",
                    "data_type": "string",
                    "example_values": [
                        "blocked"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.static.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member",
                    "data_type": "string",
                    "example_values": [
                        "2.2.2.2 Added By User"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "test_address_tag"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 22:58:19"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member",
                    "data_type": "string",
                    "example_values": [
                        "xyz"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "from_ui"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "new"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 22:58:19"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_address_groups",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total address groups: 1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "List Address Groups"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get address group",
            "description": "Fetch address group details for the supplied address group name",
            "type": "investigate",
            "identifier": "get_address_group",
            "read_only": true,
            "parameters": {
                "name": {
                    "description": "Name of address group (up to 63 characters)",
                    "primary": true,
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "contains": [
                        "panorama address group name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which the address group exists (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_grp"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "contains": [
                        "panorama address group name"
                    ],
                    "example_values": [
                        "test_address_group_name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@loc",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.static.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "from_ui"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/24 23:15:36"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully fetched address group details"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "json",
                "title": "Get Address Group"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete address group",
            "identifier": "delete_address_group",
            "description": "Delete an address group for the supplied address group name",
            "read_only": false,
            "type": "correct",
            "parameters": {
                "name": {
                    "description": "Name of address group (up to 63 characters)",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "required": true,
                    "contains": [
                        "panorama address group name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which the address group exists (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 2
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 1,
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_grp"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "column_name": "Address Group Name",
                    "column_order": 0,
                    "contains": [
                        "panorama address group name"
                    ],
                    "example_values": [
                        "test_address_group_name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Delete Address Group",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create address",
            "identifier": "create_address",
            "description": "Create an address on the panorama platform",
            "verbose": "<p><h4>Action Keynote</h4><ul><li>The 'ip' paramater support 4-type of ip address object as follow. <ol><li>IP Netmask\u2014Enter the IPv4 or IPv6 address or IP address range using the following notation: ip_address/mask or ip_address where the mask is the number of significant binary digits used for the network portion of the address. Ideally, for IPv6 addresses, you specify only the network portion, not the host portion. For example:</li><ul><li>192.168.80.150/32\u2014Indicates one address.</li><li>192.168.80.0/24\u2014Indicates all addresses from 192.168.80.0 through 192.168.80.255.</li><li>2001:db8::/32</li><li>2001:db8:123:1::/64</li></ul><li>IP Range\u2014Enter a range of addresses using the following format: ip_address-ip_address where both ends of the range are IPv4 addresses or both are IPv6 addresses. For example: 2001:db8:123:1::1-2001:db8:123:1::22</li><li>IP Wildcard Mask\u2014Enter an IP wildcard address in the format of an IPv4 address followed by a slash and a mask (which must begin with a zero); for example, 10.182.1.1/0.127.248.0. In the wildcard mask, a zero (0) bit indicates that the bit being compared must match the bit in the IP address that is covered by the 0. A one (1) bit in the mask is a wildcard bit, meaning the bit being compared need not match the bit in the IP address that is covered by the 1. Convert the IP address and the wildcard mask to binary. To illustrate the matching: on binary snippet 0011, a wildcard mask of 1010 results in four matches (0001, 0011, 1001, and 1011).<ul><li>Note - You can use an address object of type IP Wildcard Mask only in a Security policy rule.</li></ul></li><li>FQDN\u2014Enter the domain name. The FQDN initially resolves at commit time. An FQDN entry is subsequently refreshed based on the TTL of the FQDN if the TTL is greater than or equal to the Minimum FQDN Refresh Time; otherwise the FQDN entry is refreshed at the Minimum FQDN Refresh Time. The FQDN is resolved by the system DNS server or a DNS proxy object if a proxy is configured.</li></ol></li></p>",
            "read_only": false,
            "type": "contain",
            "undo": "delete address",
            "parameters": {
                "name": {
                    "description": "Name of address to be created (up to 63 characters)",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama address name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which you want to create address (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "type": {
                    "description": "Type of address to create",
                    "data_type": "string",
                    "order": 2,
                    "required": true,
                    "value_list": [
                        "IP Netmask",
                        "IP Range",
                        "IP Wildcard Mask",
                        "FQDN"
                    ],
                    "default": "IP Netmask"
                },
                "value": {
                    "description": "Value of address as per the selected type",
                    "data_type": "string",
                    "order": 3,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "ip",
                        "ipv6",
                        "domain",
                        "panorama address value"
                    ]
                },
                "description": {
                    "description": "Description of address (up to 1023 characters)",
                    "data_type": "string",
                    "order": 4
                },
                "tag": {
                    "description": "Tags want to apply on an address (comma-separated, up to 127 characters for each tag)",
                    "data_type": "string",
                    "order": 5
                },
                "disable_override": {
                    "description": "Whether to disable override the address or not",
                    "data_type": "string",
                    "value_list": [
                        "Yes",
                        "No"
                    ],
                    "default": "No",
                    "order": 6
                },
                "ph_0": {
                    "order": 7,
                    "description": "Place holder",
                    "data_type": "ph"
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 8
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 9
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.description",
                    "data_type": "string",
                    "example_values": [
                        "Test description"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 2,
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_grp"
                    ]
                },
                {
                    "data_path": "action_result.parameter.disable_override",
                    "data_type": "string",
                    "example_values": [
                        "Yes"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "column_name": "Address Name",
                    "column_order": 0,
                    "contains": [
                        "panorama address name"
                    ],
                    "example_values": [
                        "test_address_name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.tag",
                    "data_type": "string",
                    "example_values": [
                        "test_address_tag"
                    ]
                },
                {
                    "data_path": "action_result.parameter.type",
                    "data_type": "string",
                    "example_values": [
                        "IP Netmask"
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.value",
                    "data_type": "string",
                    "column_name": "IP",
                    "column_order": 1,
                    "contains": [
                        "ip",
                        "ipv6",
                        "domain",
                        "panorama address value"
                    ],
                    "example_values": [
                        "10.1.1.1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@total-count",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.details.line",
                    "data_type": "string",
                    "example_values": [
                        "Configuration committed successfully"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "622"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:06:14"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/11 03:06:14"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/11 03:06:40"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "Commit"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_config.finished_job.warnings.line",
                    "data_type": "string",
                    "example_values": [
                        "HA Peer Serial Number has not been entered. Please enter the serial number of the HA peer."
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.description",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.devices",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.dgname",
                    "data_type": "string",
                    "example_values": [
                        "share"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.id",
                    "data_type": "string",
                    "example_values": [
                        "633"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.positionInQ",
                    "data_type": "string",
                    "example_values": [
                        "0"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.progress",
                    "data_type": "string",
                    "example_values": [
                        "100"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.push_type",
                    "data_type": "string",
                    "example_values": [
                        "shared-policy"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.queued",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.result",
                    "data_type": "string",
                    "example_values": [
                        "OK"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.sched",
                    "data_type": "string",
                    "example_values": [
                        "None"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.status",
                    "data_type": "string",
                    "example_values": [
                        "FIN"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.stoppable",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tdeq",
                    "data_type": "string",
                    "example_values": [
                        "03:06:43"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tenq",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/11 03:06:43"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.tfin",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/11 03:06:43"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.type",
                    "data_type": "string",
                    "example_values": [
                        "CommitAll"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.user",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.summary.commit_device_groups.*.finished_job.warnings",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.create_address.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_address.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_address.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table",
                "width": 12,
                "height": 5,
                "title": "Create Address"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get address",
            "identifier": "get_address",
            "description": "Fetch address details for the supplied address name",
            "read_only": true,
            "type": "investigate",
            "parameters": {
                "name": {
                    "description": "Name of address (up to 63 characters)",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama address name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which the address exists (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_grp"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "contains": [
                        "panorama address name"
                    ],
                    "example_values": [
                        "test_address_name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "175"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@loc",
                    "data_type": "string",
                    "example_values": [
                        "dg1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@name",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/13 05:18:32"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "example_values": [
                        "Test"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description.#text",
                    "data_type": "string",
                    "example_values": [
                        "testing with ,"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "25"
                    ]
                },
                {
                    "data_path": "action_result.data.*.description.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 23:49:56"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override.#text",
                    "data_type": "string",
                    "example_values": [
                        "No"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "175"
                    ]
                },
                {
                    "data_path": "action_result.data.*.disable-override.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/13 05:18:32"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-netmask",
                    "data_type": "string",
                    "example_values": [
                        "10.1.1.1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-netmask.#text",
                    "data_type": "string",
                    "example_values": [
                        "10.1.1.1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-netmask.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-netmask.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "175"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-netmask.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/13 05:18:32"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.#text",
                    "data_type": "string",
                    "example_values": [
                        "test_tag1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/05 23:22:27"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@admin",
                    "data_type": "string",
                    "example_values": [
                        "user1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "46"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member",
                    "data_type": "string",
                    "example_values": [
                        "test_tag1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-wildcard.#text",
                    "data_type": "string",
                    "example_values": [
                        "10.20.1.0/0.0.248.255"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-wildcard.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/19 04:16:04"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-wildcard.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-wildcard.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "322"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-range.#text",
                    "data_type": "string",
                    "example_values": [
                        "12.12.12.12-13.13.13.13"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-range.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/19 04:16:05"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-range.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.ip-range.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "322"
                    ]
                },
                {
                    "data_path": "action_result.data.*.fqdn.#text",
                    "data_type": "string",
                    "example_values": [
                        "www.google.com"
                    ]
                },
                {
                    "data_path": "action_result.data.*.fqdn.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/10/19 04:16:06"
                    ]
                },
                {
                    "data_path": "action_result.data.*.fqdn.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.fqdn.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "322"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "25"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 23:49:56"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.*.#text",
                    "data_type": "string",
                    "example_values": [
                        "avs"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.*.@admin",
                    "data_type": "string",
                    "example_values": [
                        "admin"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.*.@dirtyId",
                    "data_type": "string",
                    "example_values": [
                        "25"
                    ]
                },
                {
                    "data_path": "action_result.data.*.tag.member.*.@time",
                    "data_type": "string",
                    "example_values": [
                        "2023/09/26 23:49:56"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully fetched address details"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "json",
                "title": "Get Address"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete address",
            "identifier": "delete_address",
            "description": "Delete address details for the supplied address name",
            "read_only": false,
            "type": "correct",
            "parameters": {
                "name": {
                    "description": "Name of address (up to 63 characters)",
                    "data_type": "string",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama address name"
                    ]
                },
                "device_group": {
                    "description": "Device group in which the address exists (up to 31 characters, default is 'shared')",
                    "data_type": "string",
                    "default": "shared",
                    "order": 1,
                    "required": true,
                    "primary": true,
                    "contains": [
                        "panorama device group"
                    ]
                },
                "should_commit_changes": {
                    "description": "Whether to commit both, changes to firewall and changes to device groups at the end of this action",
                    "data_type": "boolean",
                    "default": true,
                    "order": 2
                },
                "use_partial_commit": {
                    "description": "Whether to perform user specific commit. As part of the request, the configuration's username is included as the administrator name (when the 'should_commit_changes' is 'false' the 'use_partial_commit' parameter is ignored)",
                    "data_type": "boolean",
                    "default": true,
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.device_group",
                    "data_type": "string",
                    "column_name": "Device Group",
                    "column_order": 1,
                    "contains": [
                        "panorama device group"
                    ],
                    "example_values": [
                        "test_device_grp"
                    ]
                },
                {
                    "data_path": "action_result.parameter.name",
                    "data_type": "string",
                    "column_name": "Address Name",
                    "column_order": 0,
                    "contains": [
                        "panorama address name"
                    ],
                    "example_values": [
                        "test_address_name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.should_commit_changes",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.parameter.use_partial_commit",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.delete_address.response.@code",
                    "data_type": "string",
                    "example_values": [
                        "20"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_address.response.@status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.summary.delete_address.response.msg",
                    "data_type": "string",
                    "example_values": [
                        "command succeeded"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Response Received: command succeeded"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "width": 12,
                "title": "Delete Address",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        }
    ],
    "pip_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.9.1-py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.3.2.post1-py3-none-any.whl"
            },
            {
                "module": "xmltodict",
                "input_file": "wheels/shared/xmltodict-0.12.0-py2.py3-none-any.whl"
            }
        ]
    },
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/py3/beautifulsoup4-4.9.1-py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/py3/soupsieve-2.5-py3-none-any.whl"
            },
            {
                "module": "xmltodict",
                "input_file": "wheels/shared/xmltodict-0.12.0-py2.py3-none-any.whl"
            }
        ]
    }
}
